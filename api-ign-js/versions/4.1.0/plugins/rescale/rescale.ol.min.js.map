{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/rescale.html","webpack:///./src/impl/ol/js/rescalecontrol.js","webpack:///./src/facade/js/i18n/language.js","webpack:///./src/facade/js/rescalecontrol.js","webpack:///./src/facade/js/rescale.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","RescaleControl","M","impl","Control","map","html","this","facadeMap_","scale","resolution","view","getMapImpl","getView","closestZoom","getClosestResolution","animate","center","getCenter","duration","document","querySelector","Math","trunc","originalScale","newScale","minZoom","getMinZoom","maxZoom","getMaxZoom","lastZoom","zoom","getResolutionForZoom","getWMTSScale","oldWins","abs","setResolution","utils","undefined","dx","getSize","dy","cosRotation","cos","getRotation","sinRotation","sin","xCos","xSin","yCos","ySin","x","y","x0","x1","x2","x3","y0","y1","y2","y3","min","max","projection","getProjection","code","mpu","ol","proj","getMetersPerUnit","pix","pix2","getForViewAndSize","translations","en","es","getLang","res","language","getTranslation","lang","getValue","keyPath","translation","isNullOrEmpty","console","warn","split","reduce","prev","current","isUndefined","RescaleImplControl","exception","impl_","map_","Promise","success","fail","template","compileSync","vars","insertscale","addEventListener","e","zoomToInputScale","keyCode","writtenScale","target","trim","replace","test","zoomToScale","parseInt","substring","control","Rescale","options","controls_","position_","position","collapsible","collapsed","metadata_","api","metadata","tooltip_","tooltip","Plugin","control_","push","panel_","ui","Panel","className","collapsedButtonClass","addControls","addPanels","removeControls","window","plugin","M$plugin$Rescale","M$control$RescaleControl","M$impl$control$RescaleControl"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,gBClFrDhC,EAAOD,QAAU,+L,w7DCKIkC,E,8ZAAuBC,EAAEC,KAAKC,S,oCAU3CC,EAAKC,GACT,yCAAYD,EAAKC,GACjBC,KAAKC,WAAaH,I,kCAURI,GACV,IAAIC,EACJ,GAAc,MAAVD,EAAe,CACjB,IAAME,EAAOJ,KAAKC,WAAWI,aAAaC,UACpCC,EAAcP,KAAKQ,qBAAqBN,GAC9CC,EAAaI,EAAYJ,WACzBC,EAAKK,QAAQ,CACXC,OAAQN,EAAKO,YACbR,aACAS,SAAU,MAEZC,SAASC,cAAc,yBAAyBnC,MAAQoC,KAAKC,MAAMT,EAAYL,U,2CAW9De,GAMnB,IALA,IAGIC,EAHEC,EAAUnB,KAAKC,WAAWmB,aAC1BC,EAAUrB,KAAKC,WAAWqB,aAC5BC,EAAW,GAGNC,EAAOL,EAASK,EAAOH,EAAU,EAAGG,GAAQ,EAAG,CACtD,IAAMrB,EAAaH,KAAKC,WAAWI,aAAaC,UAAUmB,qBAAqBD,GAC3EtB,EAAQF,KAAK0B,aAAavB,GAC9B,GAAID,EAAQe,EAAe,CACzB,IAAMU,EAAUZ,KAAKa,IAAIX,EAAgBf,GAASa,KAAKa,IAAIX,EAAgBM,EAASrB,OACpFF,KAAKC,WAAWI,aAAaC,UAAUuB,cAAc1B,GACrDD,EAAQP,EAAEC,KAAKkC,MAAMJ,aAAa1B,KAAKC,YAAY,GACnDiB,EAAWS,EAAUJ,EAAW,CAAErB,QAAOC,cACzCqB,EAAOH,EAAU,OAEjBE,EAAW,CAAErB,QAAOC,cAQxB,YAJiB4B,IAAbb,IACFA,EAAWK,GAGNL,I,wCAUSf,GAChB,IAAM6B,EAAM7B,EAAaH,KAAKC,WAAWI,aAAa4B,UAAU,GAAM,EAChEC,EAAM/B,EAAaH,KAAKC,WAAWI,aAAa4B,UAAU,GAAM,EAChEE,EAAcpB,KAAKqB,IAAIpC,KAAKC,WAAWI,aAAaC,UAAU+B,eAC9DC,EAAcvB,KAAKwB,IAAIvC,KAAKC,WAAWI,aAAaC,UAAU+B,eAC9DG,EAAOR,EAAKG,EACZM,EAAOT,EAAKM,EACZI,EAAOR,EAAKC,EACZQ,EAAOT,EAAKI,EACZM,EAAI5C,KAAKC,WAAWU,YAAYiC,EAChCC,EAAI7C,KAAKC,WAAWU,YAAYkC,EAChCC,EAAMF,EAAIJ,EAAQG,EAClBI,EAAMH,EAAIJ,EAAQG,EAClBK,EAAMJ,EAAIJ,EAAQG,EAClBM,EAAML,EAAIJ,EAAQG,EAClBO,EAAML,EAAIJ,EAAQC,EAClBS,EAAMN,EAAIJ,EAAQC,EAClBU,EAAMP,EAAIJ,EAAQC,EAClBW,EAAMR,EAAIJ,EAAQC,EACxB,MAAO,CACL3B,KAAKuC,IAAIR,EAAIC,EAAIC,EAAIC,GAAKlC,KAAKuC,IAAIJ,EAAIC,EAAIC,EAAIC,GAC/CtC,KAAKwC,IAAIT,EAAIC,EAAIC,EAAIC,GAAKlC,KAAKwC,IAAIL,EAAIC,EAAIC,EAAIC,M,mCAWtClD,GACX,IAAMqD,EAAaxD,KAAKC,WAAWwD,gBAAgBC,KAE7CC,EADSC,GAAGC,KAAKtF,IAAIiF,GACRM,mBAEbC,EADO/D,KAAKC,WAAWI,aAAa4B,UACzB,GAEX+B,EAAOhE,KAAKiE,kBAAkB9D,GAKpC,OADiBwD,GAFLK,EAAK,GAAKA,EAAK,IAEGD,EAAO,IAAQ,S,gDCrH3CG,EAAe,CACnBC,G,KACAC,G,MAGIC,EAAU,WACd,IAAIC,EAAM,KAKV,MAJkC,mBAAvB3E,EAAE4E,SAASF,UACpBC,EAAM3E,EAAE4E,SAASF,WAGZC,GAsBIE,EAAiB,SAACC,GAC7B,OAAOP,EAAaO,IAcTC,EAAW,SAACC,GAA8B,IAArBF,EAAqB,uDAAdJ,IACjCO,EAAcJ,EAAeC,GAC/B9F,EAAQ,GAQZ,OAPIgB,EAAEmC,MAAM+C,cAAcD,GAExBE,QAAQC,KAAR,2BAAiCN,EAAjC,4BAEA9F,EAAQgG,EAAQK,MAAM,KAAKC,QAAO,SAACC,EAAMC,GAAP,OAAmBD,EAAKC,KAAUP,GAG/DjG,G,2yBCxDYe,E,YAUnB,aAAc,O,4FAAA,SACRC,EAAEmC,MAAMsD,YAAYC,IACtB1F,EAAE2F,UAAU,mEAEd,IAAM1F,EAAO,IAAIyF,EAJL,OAKZ,wBAAMzF,EAAM,aACP2F,MAAQ3F,EAND,E,sPAV4BD,EAAEE,S,yCA2BjCC,GAAK,WAEd,OADAE,KAAKwF,KAAO1F,EACL,IAAI2F,SAAQ,SAACC,EAASC,GAC3B,IAAM5F,EAAOJ,EAAEiG,SAASC,YAAYD,IAAU,CAC5CE,KAAM,CACJ5B,aAAc,CACZ6B,YAAarB,EAAS,mBAI5B3E,EAAKe,cAAc,yBAAyBkF,iBAAiB,SAAS,SAAAC,GAAC,OAAI,EAAKC,iBAAiBD,MACjGP,EAAQ3F,Q,uCAWKkG,GACf,GAAkB,KAAdA,EAAEE,QAAgB,CACpB,IAAMC,EAAeH,EAAEI,OAAO1H,MAAM2H,OAAOC,QAAQ,KAAM,IAAIA,QAAQ,MAAO,IAAIA,QAAQ,KAAM,IAC1E,eAEJC,KAAKJ,GACnBpG,KAAKuF,MAAMkB,YAAYC,SAASN,EAAaO,UAAU,GAAI,KAFnC,aAGGH,KAAKJ,IAChCpG,KAAKuF,MAAMkB,YAAYC,SAASN,EAAc,Q,6BAa7CQ,GACL,OAAOA,aAAmBlH,O,k1BCzETmH,E,YAWnB,aAA0B,MAAdC,EAAc,uDAAJ,GAAI,O,4FAAA,UACxB,2BAMKtB,KAAO,KAOZ,EAAKuB,UAAY,GAOjB,EAAKC,UAAYF,EAAQG,UAAY,KAOrC,EAAKC,YAAcJ,EAAQI,iBACFnF,IAArB,EAAKmF,cAA2B,EAAKA,aAAc,GAQvD,EAAKC,UAAYL,EAAQK,eACFpF,IAAnB,EAAKoF,YAAyB,EAAKA,WAAY,GAOnD,EAAKlJ,KAAO,UAOZ,EAAKmJ,UAAYC,EAAIC,SAMrB,EAAKC,SAAWT,EAAQU,SAAW9C,EAAS,WA1DpB,E,sPAXS/E,EAAE8H,Q,oCAgF/B3H,GACJE,KAAK0H,SAAW,IAAIhI,EACpBM,KAAK+G,UAAUY,KAAK3H,KAAK0H,UACzB1H,KAAKwF,KAAO1F,EACZE,KAAK4H,OAAS,IAAIjI,EAAEkI,GAAGC,MAAM,eAAgB,CAC3CC,UAAW,kBACXb,YAAalH,KAAKkH,YAClBC,UAAWnH,KAAKmH,UAChBF,SAAUtH,EAAEkI,GAAGZ,SAASjH,KAAKgH,WAC7BgB,qBAAsB,aACtBR,QAASxH,KAAKuH,WAEhBvH,KAAK4H,OAAOK,YAAYjI,KAAK+G,WAC7BjH,EAAIoI,UAAUlI,KAAK4H,U,mCAWnB,gBAAU5H,KAAK/B,KAAf,YAAuB+B,KAAKgH,UAA5B,YAAyChH,KAAKmH,UAA9C,YAA2DnH,KAAKkH,e,gCAWhElH,KAAKwF,KAAK2C,eAAe,CAACnI,KAAK0H,WADvB,MAEkC,CAAC,KAAM,KAAM,MAAtD1H,KAAKwF,KAFE,KAEIxF,KAAK0H,SAFT,KAEmB1H,KAAK4H,OAFxB,O,oCAaR,OAAO5H,KAAKoH,e,gCCpIXgB,OAAOzI,EAAE0I,SAAQD,OAAOzI,EAAE0I,OAAS,IACnCD,OAAOzI,EAAEiH,UAASwB,OAAOzI,EAAEiH,QAAU,IACrCwB,OAAOzI,EAAEC,OAAMwI,OAAOzI,EAAEC,KAAO,IAC/BwI,OAAOzI,EAAEC,KAAKgH,UAASwB,OAAOzI,EAAEC,KAAKgH,QAAU,IACpDwB,OAAOzI,EAAE0I,OAAOxB,QAAUyB,EAC1BF,OAAOzI,EAAEiH,QAAQlH,eAAiB6I,EAClCH,OAAOzI,EAAEC,KAAKgH,QAAQlH,eAAiB8I","file":"rescale.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = \"<div id=\\\"div-contenedor\\\" class=\\\"m-control m-container m-rescale\\\">\\n    <label> 1:<input id=\\\"m-rescale-scaleinput\\\" type=\\\"text\\\" placeholder=\\\"{{translations.insertscale}}\\\" /></label>\\n</div>\";","/**\n * @module M/impl/control/RescaleControl\n */\n\n\nexport default class RescaleControl extends M.impl.Control {\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {HTMLElement} html of the plugin\n   * @api stable\n   */\n  addTo(map, html) {\n    super.addTo(map, html);\n    this.facadeMap_ = map;\n  }\n\n  /**\n   * This function zooms the map to the selected scale\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  zoomToScale(scale) {\n    let resolution;\n    if (scale !== '0') {\n      const view = this.facadeMap_.getMapImpl().getView();\n      const closestZoom = this.getClosestResolution(scale);\n      resolution = closestZoom.resolution;\n      view.animate({\n        center: view.getCenter(),\n        resolution,\n        duration: 500,\n      });\n      document.querySelector('#m-rescale-scaleinput').value = Math.trunc(closestZoom.scale);\n    }\n  }\n\n  /**\n   * Gets inputed scale and returns base layer closest scale and resolution.\n   * @public\n   * @function\n   * @param {Number} originalScale - requested scale\n   * @api\n   */\n  getClosestResolution(originalScale) {\n    const minZoom = this.facadeMap_.getMinZoom();\n    const maxZoom = this.facadeMap_.getMaxZoom();\n    let lastZoom = {};\n    let newScale;\n\n    for (let zoom = minZoom; zoom < maxZoom + 1; zoom += 1) {\n      const resolution = this.facadeMap_.getMapImpl().getView().getResolutionForZoom(zoom);\n      let scale = this.getWMTSScale(resolution);\n      if (scale < originalScale) {\n        const oldWins = Math.abs(originalScale - scale) > Math.abs(originalScale - lastZoom.scale);\n        this.facadeMap_.getMapImpl().getView().setResolution(resolution);\n        scale = M.impl.utils.getWMTSScale(this.facadeMap_, true);\n        newScale = oldWins ? lastZoom : { scale, resolution };\n        zoom = maxZoom + 1;\n      } else {\n        lastZoom = { scale, resolution };\n      }\n    }\n\n    if (newScale === undefined) {\n      newScale = lastZoom;\n    }\n\n    return newScale;\n  }\n\n  /**\n   * Gets view and size.\n   * @public\n   * @function\n   * @api\n   * @param {*} resolution -\n   */\n  getForViewAndSize(resolution) {\n    const dx = (resolution * this.facadeMap_.getMapImpl().getSize()[0]) / 2;\n    const dy = (resolution * this.facadeMap_.getMapImpl().getSize()[1]) / 2;\n    const cosRotation = Math.cos(this.facadeMap_.getMapImpl().getView().getRotation());\n    const sinRotation = Math.sin(this.facadeMap_.getMapImpl().getView().getRotation());\n    const xCos = dx * cosRotation;\n    const xSin = dx * sinRotation;\n    const yCos = dy * cosRotation;\n    const ySin = dy * sinRotation;\n    const x = this.facadeMap_.getCenter().x;\n    const y = this.facadeMap_.getCenter().y;\n    const x0 = (x - xCos) + ySin;\n    const x1 = (x - xCos) - ySin;\n    const x2 = (x + xCos) - ySin;\n    const x3 = (x + xCos) + ySin;\n    const y0 = (y - xSin) - yCos;\n    const y1 = (y - xSin) + yCos;\n    const y2 = (y + xSin) + yCos;\n    const y3 = (y + xSin) - yCos;\n    return [\n      Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n      Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    ];\n  }\n\n  /**\n   * Gets WMTS scale.\n   * @public\n   * @function\n   * @api\n   * @param {*} resolution -\n   */\n  getWMTSScale(resolution) {\n    const projection = this.facadeMap_.getProjection().code;\n    const olProj = ol.proj.get(projection);\n    const mpu = olProj.getMetersPerUnit(); // meters per unit in depending on the CRS;\n    const size = this.facadeMap_.getMapImpl().getSize();\n    const pix = size[0]; // Numero de pixeles en el mapa\n    // Extension del mapa en grados (xmin, ymin, xmax, ymax)\n    const pix2 = this.getForViewAndSize(resolution);\n    // Extension angular del mapa (cuantos grados estan en el mapa)\n    const ang = pix2[2] - pix2[0];\n    // (numero de metros en el mapa / numero de pixeles) / metros por pixel\n    const scale = (((mpu * ang) / pix) * 1000) / 0.28;\n    return scale;\n  }\n\n  // /**\n  //  * Gets size from viewport.\n  //  * @public\n  //  * @function\n  //  * @api\n  //  */\n  // getSizeFromViewport() {\n  //   const size = [100, 100];\n  //   const selector = `.ol-viewport[data-view=\"${ol.util.\n  //   getUid(this.facadeMap_.getMapImpl().getView())}\"]`;\n  //   const element = document.querySelector(selector);\n  //   if (element) {\n  //     const metrics = window.getComputedStyle(element);\n  //     size[0] = parseInt(metrics.width, 10);\n  //     size[1] = parseInt(metrics.height, 10);\n  //   }\n  //   return size;\n  // }\n}\n","import en from './en';\nimport es from './es';\n\n/**\n * Default object with es and en translate.\n *\n * @const\n * @type {object}\n */\nconst translations = {\n  en,\n  es,\n};\n\nconst getLang = () => {\n  let res = 'es';\n  if (typeof M.language.getLang === 'function') {\n    res = M.language.getLang();\n  }\n\n  return res;\n};\n\n/**\n * This function sets a new language translate.\n * @param {string} lang\n * @param {JSON} json\n * @public\n * @api\n */\nexport const addTranslation = (lang, json) => {\n  translations[lang] = json;\n};\n\n/**\n * This function gets a language translate.\n *\n * @param {string} lang\n * @return {JSON}\n * @public\n * @api\n */\nexport const getTranslation = (lang) => {\n  return translations[lang];\n};\n\n/**\n * This function gets a language value from key\n *\n * @public\n * @param {string}\n * @param {string}\n * @return {string}\n * @public\n * @api\n */\n\nexport const getValue = (keyPath, lang = getLang()) => {\n  const translation = getTranslation(lang);\n  let value = '';\n  if (M.utils.isNullOrEmpty(translation)) {\n    /* eslint-disable no-console */\n    console.warn(`The translation '${lang}' has not been defined.`);\n  } else {\n    value = keyPath.split('.').reduce((prev, current) => prev[current], translation);\n  }\n\n  return value;\n};\n","/**\n * @module M/control/RescaleControl\n */\n\nimport RescaleImplControl from 'impl/rescalecontrol';\nimport template from 'templates/rescale';\nimport { getValue } from './i18n/language';\n\n\n// let typingTimer;\n\nexport default class RescaleControl extends M.Control {\n  /**\n   * @classdesc\n   * Main constructor of the class. Creates a PluginControl\n   * control\n   *\n   * @constructor\n   * @extends {M.Control}\n   * @api stable\n   */\n  constructor() {\n    if (M.utils.isUndefined(RescaleImplControl)) {\n      M.exception('La implementación usada no puede crear controles RescaleControl');\n    }\n    const impl = new RescaleImplControl();\n    super(impl, 'Rescale');\n    this.impl_ = impl;\n  }\n\n  /**\n   * This function creates the view\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api stable\n   */\n  createView(map) {\n    this.map_ = map;\n    return new Promise((success, fail) => {\n      const html = M.template.compileSync(template, {\n        vars: {\n          translations: {\n            insertscale: getValue('insertscale'),\n          },\n        },\n      });\n      html.querySelector('#m-rescale-scaleinput').addEventListener('keyup', e => this.zoomToInputScale(e));\n      success(html);\n    });\n  }\n\n  /**\n   * Zooms to written scale (aproximately).\n   * @public\n   * @function\n   * @param {Event} e\n   * @api\n   */\n  zoomToInputScale(e) {\n    if (e.keyCode === 13) {\n      const writtenScale = e.target.value.trim().replace(/ /g, '').replace(/\\./g, '').replace(/,/g, '');\n      const scaleRegExp = /^1:[1-9]\\d*$/;\n      const simpleScaleRegExp = /^[1-9]\\d*$/;\n      if (scaleRegExp.test(writtenScale)) {\n        this.impl_.zoomToScale(parseInt(writtenScale.substring(2), 10));\n      } else if (simpleScaleRegExp.test(writtenScale)) {\n        this.impl_.zoomToScale(parseInt(writtenScale, 10));\n      }\n    }\n  }\n\n  /**\n   * This function compares controls\n   *\n   * @public\n   * @function\n   * @param {M.Control} control to compare\n   * @api stable\n   */\n  equals(control) {\n    return control instanceof RescaleControl;\n  }\n}\n","/**\n * @module M/plugin/Rescale\n */\nimport 'assets/css/rescale';\nimport RescaleControl from './rescalecontrol';\nimport api from '../../api';\nimport { getValue } from './i18n/language';\n\n\nexport default class Rescale extends M.Plugin {\n  /**\n   * @classdesc\n   * Main facade plugin object. This class creates a plugin\n   * object which has an implementation Object\n   *\n   * @constructor\n   * @extends {M.Plugin}\n   * @param {Object} impl implementation object\n   * @api stable\n   */\n  constructor(options = {}) {\n    super();\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.map_ = null;\n\n    /**\n     * Array of controls\n     * @private\n     * @type {Array<M.Control>}\n     */\n    this.controls_ = [];\n\n    /**\n     * This variable indicates plugin's position on window\n     * @private\n     * @type {String} { 'TL' | 'TR' | 'BL' | 'BR' } (corners)\n     */\n    this.position_ = options.position || 'TR';\n\n    /**\n     * This variable indicates if this plugin is collapsible.\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible = options.collapsible;\n    if (this.collapsible === undefined) this.collapsible = true;\n\n\n    /**\n     * This variable indicates if this plugin is collapsed on load.\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed = options.collapsed;\n    if (this.collapsed === undefined) this.collapsed = true;\n\n    /**\n     * Name of the plugin\n     * @private\n     * @type {String}\n     */\n    this.name = 'rescale';\n\n    /**\n     * Metadata from api.json\n     * @private\n     * @type {Object}\n     */\n    this.metadata_ = api.metadata;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.tooltip_ = options.tooltip || getValue('tooltip');\n  }\n\n  /**\n   * This function adds this plugin into the map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map the map to add the plugin\n   * @api stable\n   */\n  addTo(map) {\n    this.control_ = new RescaleControl();\n    this.controls_.push(this.control_);\n    this.map_ = map;\n    this.panel_ = new M.ui.Panel('panelRescale', {\n      className: 'm-rescale-panel',\n      collapsible: this.collapsible,\n      collapsed: this.collapsed,\n      position: M.ui.position[this.position_],\n      collapsedButtonClass: 'icon-scale',\n      tooltip: this.tooltip_,\n    });\n    this.panel_.addControls(this.controls_);\n    map.addPanels(this.panel_);\n  }\n\n  /**\n   * Get the API REST Parameters of the plugin\n   *\n   * @function\n   * @public\n   * @api\n   */\n  getAPIRest() {\n    return `${this.name}=${this.position_}*${this.collapsed}*${this.collapsible}`;\n  }\n\n  /**\n   * This function destroys this plugin\n   *\n   * @public\n   * @function\n   * @api\n   */\n  destroy() {\n    this.map_.removeControls([this.control_]);\n    [this.map_, this.control_, this.panel_] = [null, null, null];\n  }\n\n  /**\n   * This function gets metadata plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  getMetadata() {\n    return this.metadata_;\n  }\n}\n","import M$plugin$Rescale from './/facade/js/rescale';\nimport M$control$RescaleControl from './/facade/js/rescalecontrol';\nimport M$impl$control$RescaleControl from './/impl/ol/js/rescalecontrol';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.Rescale = M$plugin$Rescale;\nwindow.M.control.RescaleControl = M$control$RescaleControl;\nwindow.M.impl.control.RescaleControl = M$impl$control$RescaleControl;\n"],"sourceRoot":""}