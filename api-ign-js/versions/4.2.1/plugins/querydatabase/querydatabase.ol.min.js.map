{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/global.js","webpack:///./src/templates/tabledata.html","webpack:///./node_modules/process/browser.js","webpack:///./src/templates/querydatabase.html","webpack:///./src/templates/initialview.html","webpack:///./src/templates/tablefilter.html","webpack:///./src/templates/tabledatabases.html","webpack:///./src/templates/tabledatatables.html","webpack:///./src/templates/tableAttributes.html","webpack:///./node_modules/async/dist/async.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./src/impl/ol/js/querydatabasecontrol.js","webpack:///./src/facade/js/i18n/language.js","webpack:///./src/facade/js/querydatabasecontrol.js","webpack:///./src/facade/js/querydatabase.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","g","this","Function","e","window","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","func","thisArg","nativeMax","Math","max","identity","rest","start","transform","undefined","index","otherArgs","overRest$1","initialParams","fn","callback","pop","applyEach$1","eachfn","fns","go","that","cb","freeGlobal","global","freeSelf","self","root","Symbol$1","objectProto","nativeObjectToString","toString","symToStringTag$1","nativeObjectToString$1","symToStringTag","baseGetTag","isOwn","tag","unmasked","result","getRawTag","objectToString","isObject","type","isLength","isArrayLike","isFunction","callFn","iteratorSymbol","iterator","isObjectLike","baseIsArguments","objectProto$3","hasOwnProperty$2","propertyIsEnumerable","isArguments","isArray","freeExports","nodeType","freeModule","Buffer","isBuffer","reIsUint","isIndex","test","typedArrayTags","freeExports$1","freeModule$1","freeProcess","nodeUtil","nodeIsTypedArray","isTypedArray","hasOwnProperty$1","arrayLikeKeys","inherited","isArr","isArg","isBuff","isType","skipIndexes","iteratee","baseTimes","String","objectProto$5","nativeKeys","arg","overArg","keys","hasOwnProperty$3","baseKeys","Ctor","constructor","coll","createArrayIterator","obj","okeys","getIterator","item","next","done","createES2015Iterator","onlyOnce","breakLoop","_eachOfLimit","limit","nextElem","running","iterateeCallback","err","replenish","elem","eachOfLimit","doLimit","iterable","eachOfArrayLike","completed","iteratorCallback","eachOfGeneric","Infinity","eachOf","doParallel","_asyncMap","arr","results","counter","_","v","map","applyEach","doParallelLimit","mapLimit","mapSeries","applyEachSeries","apply$2","callArgs","asyncify","then","message","arrayEach","fromRight","baseFor","keysFunc","props","baseForOwn","baseIsNaN","baseIndexOf","fromIndex","strictIndexOf","predicate","baseFindIndex","auto","tasks","concurrency","numTasks","runningTasks","hasError","readyTasks","readyToCheck","uncheckedDependencies","enqueueTask","task","taskCallback","safeResults","val","rkey","processQueue","taskFn","runTask","shift","getDependents","taskName","dependencies","slice","remainingDependencies","dependencyName","join","taskListeners","currentTask","dependent","checkForDeadlocks","arrayMap","symbolProto","symbolToString","baseToString","isSymbol","castSlice","end","baseSlice","reHasUnicode","RegExp","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsModifier","rsSeq","rsSymbol","reUnicode","stringToArray","string","hasUnicode","match","unicodeToArray","split","asciiToArray","reTrim","trim","chars","guard","replace","strSymbols","chrSymbols","charsStartIndex","charsEndIndex","FN_ARGS","FN_ARG_SPLIT","FN_ARG","STRIP_COMMENTS","autoInject","newTasks","params","newTask","parseParams","taskCb","newArgs","hasSetImmediate","setImmediate","hasNextTick","fallback","wrap","defer","setImmediate$1","DLL","head","tail","setInitial","dll","node","worker","payload","_insert","data","insertAtFront","q","started","idle","drain","_tasks","unshift","_next","workers","workersList","splice","error","buffer","unsaturated","saturated","empty","paused","kill","min","pause","resume","resumeCount","w","cargo","removeLink","prev","insertAfter","newNode","insertBefore","eachOfSeries","reduce","memo","x","seq$1","functions","newargs","nextargs","compose","reverse","concat$1","y","concatSeries","constant","values","ignoredArgs","_createTester","check","getResult","wrappedIteratee","_findGetResult","detect","detectLimit","detectSeries","consoleFunc","console","doDuring","truth","doWhilst","doUntil","during","_withoutIndex","eachLimit","eachLimit$1","eachSeries","ensureAsync","sync","innerArgs","notId","every","everyLimit","everySeries","baseProperty","filterArray","truthValues","filterGeneric","sort","a","b","_filter","filter","filterLimit","filterSeries","forever","errback","log","mapValuesLimit","newObj","mapValues","mapValuesSeries","has","memoize","hasher","queues","memoized","unmemoized","_parallel","parallelLimit","parallelLimit$1","queue$1","items","priorityQueue","priority","nextNode","race","TypeError","reduceRight","reflect","reflectCallback","cbArgs","reject$1","reject","reflectAll","rejectLimit","rejectSeries","constant$1","retry","opts","DEFAULT_TIMES","DEFAULT_INTERVAL","options","times","intervalFunc","parseTimes","acc","interval","errorFilter","attempt","retryAttempt","retryable","series","some","Boolean","someLimit","someSeries","sortBy","comparator","left","right","criteria","asyncFn","milliseconds","info","originalCallback","timer","timedOut","injectedCallback","timeoutCallback","code","origCallback","nativeCeil","ceil","nativeMax$1","timeLimit","count","step","baseRange","timesSeries","accumulator","k","unmemoize","whilst","until","waterfall","taskIndex","nextTask","each","parallel","seq","timesLimit","all","any","forEach","forEachSeries","forEachLimit","forEachOf","forEachOfSeries","forEachOfLimit","inject","foldl","foldr","select","selectLimit","selectSeries","wrapSync","allLimit","allSeries","anyLimit","anySeries","find","findLimit","findSeries","factory","webpackPolyfill","deprecate","paths","children","Timeout","id","clearFn","_id","_clearFn","scope","setInterval","clearInterval","close","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","registerImmediate","html","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","doc","document","attachTo","getPrototypeOf","handle","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","MessageChannel","port1","event","port2","createElement","documentElement","script","onreadystatechange","removeChild","appendChild","random","source","indexOf","addEventListener","attachEvent","QueryDatabaseControl","M","impl","Control","facadeMap","vectorSource","newVectorSource","featuresIncluded","ol","Vector","features","Collection","extent","geom","Polygon","fromExtent","Feature","geometry","coordinates","getCoordinates","getType","properties","layer","getImpl","getOL3Layer","getSource","getExtent","ext","MultiPoint","Point","MultiPolygon","MultiLineString","LineString","codeProjection","oldCoordinates","transformFunction","proj","getTransform","getFullCoordinates","getXY","coordinatesSet","coordinateCopy","newXY","newCoordinates","translations","en","es","getLang","res","language","getTranslation","lang","getValue","keyPath","translation","utils","isNullOrEmpty","warn","current","collapsed_","position_","connection_","styles_","isUndefined","QueryDatabaseImplControl","exception","filtered","bboxfilter","collapsed","position","connection","styles","token","getTokenByConnection","atributos","getArrayFormated","attributes","filters","databaseLayer","extract","paginaActual","moveEvents","elementos","cluster","Promise","success","fail","createInitialView","addLayers","template","compileSync","vars","attribute_table","clean_filters","export","querySelector","initialView","innerHTML","launchComun","evt","target","getAttribute","database","getTablasDisponibles","table","tabla","schema","removeMapMoveEvents","drawTable","createFilterView","addMapMoveEvent","filtrarDatos","parentNode","getColumnasTablas","addAtrasEvent","getBasesDatosDisponibles","includes","paginasTotales","Number","parseInt","createInitialTemplate","host","port","user","password","launchInicial","url","config","MAPEA_URL","remote","response","databases","JSON","parse","text","tabledatabases","launchDatabasesWindow","tables","tabledatatables","launchTablesWindow","tableAttributes","launchAttributesWindow","rows","tabledata","launchDataTable","filtros","geomBbox","buildGeomFromBbox","zoom","getZoom","pagina","numPagina","drawElements","createDataView","getAttributes","getElementsWithAttributes","interaccionTabla","tablefilter","btnFiltrar","inputs","querySelectorAll","escape","feature","getFeatureFromElement","featureId","getId","removeFeatures","getFeatures","setStyle","selectStyleLayer","getGeometry","addFeatures","element","olGeom","format","WKT","readGeometryFromText","srid","map_","getProjection","mGeom","setGeometry","setAttributes","getClusterStyle","elementos_cluster","geomType","style","getStyleByGeomType","point","line","polygon","numElementos","clone","fill","color","opacity","stroke","blue","getOptions","label","align","CENTER","baseline","MIDDLE","icon","form","MARKER","fontsize","layerName","htmlSelect","control","container","getContainer","parentElement","width","refresh","addCierraPanelEvent","addAbrePanelEvent","bbox","getBbox","featureBbox","write","replaceAll","getMapImpl","un","btoa","j","datos","localName","resaltarElemento","getFeatureById","cambiarEstiloFeature","QueryDatabase","Plugin","controls_","collapsible_","collapsible","panel_","ui","Panel","className","collapsedButtonClass","tooltip","control_","addControls","addPanels","initPanelAttributes","removeControls","plugin","M$plugin$QueryDatabase","M$control$QueryDatabaseControl","M$impl$control$QueryDatabaseControl"],"mappings":"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","file":"querydatabase.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = \"<table id=\\\"m-querydatabase-dataelements\\\" summary=\\\"Tabla con los atributos de los elementos de la capa vectorial\\\">\\n  <thead>\\n    <tr class=\\\"m-querydatabase-table-thead\\\">\\n      {{#each atributos}}\\n      <th>{{value}}</th>\\n      {{/each}}\\n      </tr>\\n    </thead>\\n    <tbody>\\n      {{#each elementos}}\\n      <tr id=\\\"{{featureId}}\\\">\\n        {{#each datos}}\\n        <td>{{this}}</td>\\n        {{/each}}\\n      </tr>\\n      {{/each}}\\n    </tbody>\\n</table>\";","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = \"<div id=\\\"div-contenedor\\\" class=\\\"m-control m-container m-querydatabase\\\">\\n  <div class=\\\"title\\\">{{translations.attribute_table}}</div>\\n\\n  <div id=\\\"m-querydatabase-options-container\\\"></div>\\n\\n  <div id=\\\"m-querydatabase-options-information-container\\\"></div>\\n\\n  <div id=\\\"m-querydatabase-options-buttons\\\">\\n    <button id=\\\"limpiar-filtro-btn\\\" style=\\\"display: none;\\\">{{translations.clean_filters}}</button>\\n    <button id=\\\"exportar-btn\\\" style=\\\"display: none;\\\">{{translations.export}}</button>\\n    <button id=\\\"cleanEmphasis-btn\\\" style=\\\"display: none;\\\">Limpiar marcas</button>\\n  </div>\\n</div>\\n\";","module.exports = \"<div id=\\\"m-querydatabase-initialview\\\">\\n    <div id=\\\"m-querydatabase-table\\\">\\n      <div class=\\\"m-querydatabase-table-loading\\\">\\n        <p>{{translations.loading}}</p>\\n        <span class=\\\"icon-spinner\\\" />\\n      </div>\\n    </div>\\n</div>\\n\";","module.exports = \"<div id=\\\"m-querydatabase-table-content\\\">\\n    <div id=\\\"m-querydatabase-table-filter\\\">\\n      {{#if filters}}\\n      {{#each filters}}\\n        <label>{{value}}</label>\\n        <input class=\\\"filter-input\\\" type=\\\"text\\\" id=\\\"{{value}}\\\"/>\\n        {{/each}}\\n        <button id=\\\"filtrar-elementos\\\">Buscar</button>\\n        {{/if}}\\n    </div>\\n    <div id=\\\"m-querydatabase-table-container\\\">\\n    </div>\\n    <button id=\\\"atras\\\">Ver tablas</button>\\n</div>\";","module.exports = \"<div id=\\\"m-querydatabase-table-content\\\">\\n    <div id=\\\"m-querydatabase-table-container\\\">\\n        <table id=\\\"databases\\\" summary=\\\"Tabla con las bases de datos disponibles\\\">\\n            <thead>\\n              <tr class=\\\"m-querydatabase-table-thead\\\">\\n                <th>Nombre</th>\\n                <th>NombreBD</th>\\n                <th>Host</th>\\n                <th>Puerto</th>\\n                <th></th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n                {{#each databases}}\\n                <tr>\\n                    <td>{{Nombre}}</td>\\n                    <td>{{NombreBD}}</td>\\n                    <td>{{Host}}</td>\\n                    <td>{{Puerto}}</td>\\n                    <td><button class=\\\"showtables\\\" id=\\\"{{Nombre}}\\\">Mostrar tablas</button></td>\\n                </tr>\\n                {{/each}}\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n\";","module.exports = \"<div id=\\\"m-querydatabase-table-content\\\">\\n    <div id=\\\"m-querydatabase-table-container\\\">\\n        <table id=\\\"tables\\\" summary=\\\"Tabla con las tablas geométricas disponibles en una base de datos\\\">\\n            <thead>\\n              <tr class=\\\"m-querydatabase-table-thead\\\">\\n                <th>Esquema</th>\\n                <th>Nombre</th>\\n                <th></th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n                {{#each tables}}\\n                <tr id=\\\"{{Schema}}&{{Nombre}}\\\">\\n                      <td>{{Schema}}</td>\\n                      <td>{{Nombre}}</td>\\n                      <td>\\n                        <button class=\\\"filter\\\">Filtrar</button>\\n<!--                        <button class=\\\"showdata\\\">Ver datos</button>-->\\n                        <button class=\\\"drawtable\\\">Pintar</button>\\n                      </td>\\n                </tr>\\n                {{/each}}\\n            </tbody>\\n        </table>\\n    </div>\\n    <button id=\\\"atras\\\">Ver conexiones</button>\\n</div>\\n\";","module.exports = \"<div id=\\\"m-querydatabase-table-content\\\">\\n    <div id=\\\"m-querydatabase-table-container\\\">\\n      <table id=\\\"attributedata\\\" summary=\\\"Tabla con los atributos de los elementos de la capa vectorial\\\">\\n            <thead>\\n              <tr class=\\\"m-querydatabase-table-thead\\\">\\n                <th>Nombre</th>\\n                <th>Tipo dato</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n                {{#each attributes}}\\n                <tr>\\n                  <td>{{Nombre}}</td>\\n                  <td>{{TipoDato}}</td>\\n                </tr>\\n                {{/each}}\\n            </tbody>\\n        </table>\\n    </div>\\n    <button id=\\\"atras\\\">Ver tablas</button>\\n</div>\\n\";","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (factory((global.async = global.async || {})));\n}(this, (function (exports) { 'use strict';\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest$1(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n// Lodash rest function without function.toString()\n// remappings\nfunction rest(func, start) {\n    return overRest$1(func, start, identity);\n}\n\nvar initialParams = function (fn) {\n    return rest(function (args /*..., callback*/) {\n        var callback = args.pop();\n        fn.call(this, args, callback);\n    });\n};\n\nfunction applyEach$1(eachfn) {\n    return rest(function (fns, args) {\n        var go = initialParams(function (args, callback) {\n            var that = this;\n            return eachfn(fns, function (fn, cb) {\n                fn.apply(that, args.concat([cb]));\n            }, callback);\n        });\n        if (args.length) {\n            return go.apply(this, args);\n        } else {\n            return go;\n        }\n    });\n}\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Built-in value references. */\nvar Symbol$1 = root.Symbol;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag$1 = Symbol$1 ? Symbol$1.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag$1),\n      tag = value[symToStringTag$1];\n\n  try {\n    value[symToStringTag$1] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag$1] = tag;\n    } else {\n      delete value[symToStringTag$1];\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto$1 = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString$1 = objectProto$1.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString$1.call(value);\n}\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]';\nvar undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol$1 ? Symbol$1.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  value = Object(value);\n  return (symToStringTag && symToStringTag in value)\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]';\nvar funcTag = '[object Function]';\nvar genTag = '[object GeneratorFunction]';\nvar proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nfunction once(fn) {\n    return function () {\n        if (fn === null) return;\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\nvar iteratorSymbol = typeof Symbol === 'function' && Symbol.iterator;\n\nvar getIterator = function (coll) {\n    return iteratorSymbol && coll[iteratorSymbol] && coll[iteratorSymbol]();\n};\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/** Used for built-in method references. */\nvar objectProto$3 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$2 = objectProto$3.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto$3.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty$2.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER$1 = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER$1 : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/** `Object#toString` result references. */\nvar argsTag$1 = '[object Arguments]';\nvar arrayTag = '[object Array]';\nvar boolTag = '[object Boolean]';\nvar dateTag = '[object Date]';\nvar errorTag = '[object Error]';\nvar funcTag$1 = '[object Function]';\nvar mapTag = '[object Map]';\nvar numberTag = '[object Number]';\nvar objectTag = '[object Object]';\nvar regexpTag = '[object RegExp]';\nvar setTag = '[object Set]';\nvar stringTag = '[object String]';\nvar weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]';\nvar dataViewTag = '[object DataView]';\nvar float32Tag = '[object Float32Array]';\nvar float64Tag = '[object Float64Array]';\nvar int8Tag = '[object Int8Array]';\nvar int16Tag = '[object Int16Array]';\nvar int32Tag = '[object Int32Array]';\nvar uint8Tag = '[object Uint8Array]';\nvar uint8ClampedTag = '[object Uint8ClampedArray]';\nvar uint16Tag = '[object Uint16Array]';\nvar uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag$1] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag$1] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/** Detect free variable `exports`. */\nvar freeExports$1 = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule$1 = freeExports$1 && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports$1 && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/** Used for built-in method references. */\nvar objectProto$2 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$1 = objectProto$2.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty$1.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto$5 = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$5;\n\n  return value === proto;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\n/** Used for built-in method references. */\nvar objectProto$4 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$3 = objectProto$4.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty$3.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nfunction createArrayIterator(coll) {\n    var i = -1;\n    var len = coll.length;\n    return function next() {\n        return ++i < len ? { value: coll[i], key: i } : null;\n    };\n}\n\nfunction createES2015Iterator(iterator) {\n    var i = -1;\n    return function next() {\n        var item = iterator.next();\n        if (item.done) return null;\n        i++;\n        return { value: item.value, key: i };\n    };\n}\n\nfunction createObjectIterator(obj) {\n    var okeys = keys(obj);\n    var i = -1;\n    var len = okeys.length;\n    return function next() {\n        var key = okeys[++i];\n        return i < len ? { value: obj[key], key: key } : null;\n    };\n}\n\nfunction iterator(coll) {\n    if (isArrayLike(coll)) {\n        return createArrayIterator(coll);\n    }\n\n    var iterator = getIterator(coll);\n    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);\n}\n\nfunction onlyOnce(fn) {\n    return function () {\n        if (fn === null) throw new Error(\"Callback was already called.\");\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\n// A temporary value used to identify if the loop should be broken.\n// See #1064, #1293\nvar breakLoop = {};\n\nfunction _eachOfLimit(limit) {\n    return function (obj, iteratee, callback) {\n        callback = once(callback || noop);\n        if (limit <= 0 || !obj) {\n            return callback(null);\n        }\n        var nextElem = iterator(obj);\n        var done = false;\n        var running = 0;\n\n        function iterateeCallback(err, value) {\n            running -= 1;\n            if (err) {\n                done = true;\n                callback(err);\n            } else if (value === breakLoop || done && running <= 0) {\n                done = true;\n                return callback(null);\n            } else {\n                replenish();\n            }\n        }\n\n        function replenish() {\n            while (running < limit && !done) {\n                var elem = nextElem();\n                if (elem === null) {\n                    done = true;\n                    if (running <= 0) {\n                        callback(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));\n            }\n        }\n\n        replenish();\n    };\n}\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name eachOfLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array. The iteratee is passed a `callback(err)` which must be called once it\n * has completed. If no error has occurred, the callback should be run without\n * arguments or with an explicit `null` argument. Invoked with\n * (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nfunction eachOfLimit(coll, limit, iteratee, callback) {\n  _eachOfLimit(limit)(coll, iteratee, callback);\n}\n\nfunction doLimit(fn, limit) {\n    return function (iterable, iteratee, callback) {\n        return fn(iterable, limit, iteratee, callback);\n    };\n}\n\n// eachOf implementation optimized for array-likes\nfunction eachOfArrayLike(coll, iteratee, callback) {\n    callback = once(callback || noop);\n    var index = 0,\n        completed = 0,\n        length = coll.length;\n    if (length === 0) {\n        callback(null);\n    }\n\n    function iteratorCallback(err) {\n        if (err) {\n            callback(err);\n        } else if (++completed === length) {\n            callback(null);\n        }\n    }\n\n    for (; index < length; index++) {\n        iteratee(coll[index], index, onlyOnce(iteratorCallback));\n    }\n}\n\n// a generic version of eachOf which can handle array, object, and iterator cases.\nvar eachOfGeneric = doLimit(eachOfLimit, Infinity);\n\n/**\n * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n * to the iteratee.\n *\n * @name eachOf\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEachOf\n * @category Collection\n * @see [async.each]{@link module:Collections.each}\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array. The iteratee is passed a `callback(err)` which must be called once it\n * has completed. If no error has occurred, the callback should be run without\n * arguments or with an explicit `null` argument. Invoked with\n * (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\n * var configs = {};\n *\n * async.forEachOf(obj, function (value, key, callback) {\n *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n *         if (err) return callback(err);\n *         try {\n *             configs[key] = JSON.parse(data);\n *         } catch (e) {\n *             return callback(e);\n *         }\n *         callback();\n *     });\n * }, function (err) {\n *     if (err) console.error(err.message);\n *     // configs is now a map of JSON data\n *     doSomethingWith(configs);\n * });\n */\nvar eachOf = function (coll, iteratee, callback) {\n    var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;\n    eachOfImplementation(coll, iteratee, callback);\n};\n\nfunction doParallel(fn) {\n    return function (obj, iteratee, callback) {\n        return fn(eachOf, obj, iteratee, callback);\n    };\n}\n\nfunction _asyncMap(eachfn, arr, iteratee, callback) {\n    callback = callback || noop;\n    arr = arr || [];\n    var results = [];\n    var counter = 0;\n\n    eachfn(arr, function (value, _, callback) {\n        var index = counter++;\n        iteratee(value, function (err, v) {\n            results[index] = v;\n            callback(err);\n        });\n    }, function (err) {\n        callback(err, results);\n    });\n}\n\n/**\n * Produces a new collection of values by mapping each value in `coll` through\n * the `iteratee` function. The `iteratee` is called with an item from `coll`\n * and a callback for when it has finished processing. Each of these callback\n * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n * `iteratee` passes an error to its callback, the main `callback` (for the\n * `map` function) is immediately called with the error.\n *\n * Note, that since this function applies the `iteratee` to each item in\n * parallel, there is no guarantee that the `iteratee` functions will complete\n * in order. However, the results array will be in the same order as the\n * original `coll`.\n *\n * If `map` is passed an Object, the results will be an Array.  The results\n * will roughly be in the order of the original Objects' keys (but this can\n * vary across JavaScript engines)\n *\n * @name map\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed item. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an Array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @example\n *\n * async.map(['file1','file2','file3'], fs.stat, function(err, results) {\n *     // results is now an array of stats for each file\n * });\n */\nvar map = doParallel(_asyncMap);\n\n/**\n * Applies the provided arguments to each function in the array, calling\n * `callback` after all functions have completed. If you only provide the first\n * argument, `fns`, then it will return a function which lets you pass in the\n * arguments as if it were a single function call. If more arguments are\n * provided, `callback` is required while `args` is still optional.\n *\n * @name applyEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} fns - A collection of asynchronous functions\n * to all call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {Function} - If only the first argument, `fns`, is provided, it will\n * return a function which lets you pass in the arguments as if it were a single\n * function call. The signature is `(..args, callback)`. If invoked with any\n * arguments, `callback` is required.\n * @example\n *\n * async.applyEach([enableSearch, updateSchema], 'bucket', callback);\n *\n * // partial application example:\n * async.each(\n *     buckets,\n *     async.applyEach([enableSearch, updateSchema]),\n *     callback\n * );\n */\nvar applyEach = applyEach$1(map);\n\nfunction doParallelLimit(fn) {\n    return function (obj, limit, iteratee, callback) {\n        return fn(_eachOfLimit(limit), obj, iteratee, callback);\n    };\n}\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time.\n *\n * @name mapLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a transformed\n * item. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n */\nvar mapLimit = doParallelLimit(_asyncMap);\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time.\n *\n * @name mapSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed item. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n */\nvar mapSeries = doLimit(mapLimit, 1);\n\n/**\n * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time.\n *\n * @name applyEachSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.applyEach]{@link module:ControlFlow.applyEach}\n * @category Control Flow\n * @param {Array|Iterable|Object} fns - A collection of asynchronous functions to all\n * call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {Function} - If only the first argument is provided, it will return\n * a function which lets you pass in the arguments as if it were a single\n * function call.\n */\nvar applyEachSeries = applyEach$1(mapSeries);\n\n/**\n * Creates a continuation function with some arguments already applied.\n *\n * Useful as a shorthand when combined with other control flow functions. Any\n * arguments passed to the returned function are added to the arguments\n * originally passed to apply.\n *\n * @name apply\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} function - The function you want to eventually apply all\n * arguments to. Invokes with (arguments...).\n * @param {...*} arguments... - Any number of arguments to automatically apply\n * when the continuation is called.\n * @example\n *\n * // using apply\n * async.parallel([\n *     async.apply(fs.writeFile, 'testfile1', 'test1'),\n *     async.apply(fs.writeFile, 'testfile2', 'test2')\n * ]);\n *\n *\n * // the same process without using apply\n * async.parallel([\n *     function(callback) {\n *         fs.writeFile('testfile1', 'test1', callback);\n *     },\n *     function(callback) {\n *         fs.writeFile('testfile2', 'test2', callback);\n *     }\n * ]);\n *\n * // It's possible to pass any number of additional arguments when calling the\n * // continuation:\n *\n * node> var fn = async.apply(sys.puts, 'one');\n * node> fn('two', 'three');\n * one\n * two\n * three\n */\nvar apply$2 = rest(function (fn, args) {\n    return rest(function (callArgs) {\n        return fn.apply(null, args.concat(callArgs));\n    });\n});\n\n/**\n * Take a sync function and make it async, passing its return value to a\n * callback. This is useful for plugging sync functions into a waterfall,\n * series, or other async functions. Any arguments passed to the generated\n * function will be passed to the wrapped function (except for the final\n * callback argument). Errors thrown will be passed to the callback.\n *\n * If the function passed to `asyncify` returns a Promise, that promises's\n * resolved/rejected state will be used to call the callback, rather than simply\n * the synchronous return value.\n *\n * This also means you can asyncify ES2016 `async` functions.\n *\n * @name asyncify\n * @static\n * @memberOf module:Utils\n * @method\n * @alias wrapSync\n * @category Util\n * @param {Function} func - The synchronous function to convert to an\n * asynchronous function.\n * @returns {Function} An asynchronous wrapper of the `func`. To be invoked with\n * (callback).\n * @example\n *\n * // passing a regular synchronous function\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(JSON.parse),\n *     function (data, next) {\n *         // data is the result of parsing the text.\n *         // If there was a parsing error, it would have been caught.\n *     }\n * ], callback);\n *\n * // passing a function returning a promise\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(function (contents) {\n *         return db.model.create(contents);\n *     }),\n *     function (model, next) {\n *         // `model` is the instantiated model object.\n *         // If there was an error, this function would be skipped.\n *     }\n * ], callback);\n *\n * // es6 example\n * var q = async.queue(async.asyncify(async function(file) {\n *     var intermediateStep = await processFile(file);\n *     return await somePromise(intermediateStep)\n * }));\n *\n * q.push(files);\n */\nfunction asyncify(func) {\n    return initialParams(function (args, callback) {\n        var result;\n        try {\n            result = func.apply(this, args);\n        } catch (e) {\n            return callback(e);\n        }\n        // if result is Promise object\n        if (isObject(result) && typeof result.then === 'function') {\n            result.then(function (value) {\n                callback(null, value);\n            }, function (err) {\n                callback(err.message ? err : new Error(err));\n            });\n        } else {\n            callback(null, result);\n        }\n    });\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\n/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\n/**\n * Determines the best order for running the functions in `tasks`, based on\n * their requirements. Each function can optionally depend on other functions\n * being completed first, and each function is run as soon as its requirements\n * are satisfied.\n *\n * If any of the functions pass an error to their callback, the `auto` sequence\n * will stop. Further tasks will not execute (so any other functions depending\n * on it will not run), and the main `callback` is immediately called with the\n * error.\n *\n * Functions also receive an object containing the results of functions which\n * have completed so far as the first argument, if they have dependencies. If a\n * task function has no dependencies, it will only be passed a callback.\n *\n * @name auto\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Object} tasks - An object. Each of its properties is either a\n * function or an array of requirements, with the function itself the last item\n * in the array. The object's key of a property serves as the name of the task\n * defined by that property, i.e. can be used when specifying requirements for\n * other tasks. The function receives one or two arguments:\n * * a `results` object, containing the results of the previously executed\n *   functions, only passed if the task has any dependencies,\n * * a `callback(err, result)` function, which must be called when finished,\n *   passing an `error` (which can be `null`) and the result of the function's\n *   execution.\n * @param {number} [concurrency=Infinity] - An optional `integer` for\n * determining the maximum number of tasks that can be run in parallel. By\n * default, as many as possible.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback. Results are always returned; however, if an\n * error occurs, no further `tasks` will be performed, and the results object\n * will only contain partial results. Invoked with (err, results).\n * @returns undefined\n * @example\n *\n * async.auto({\n *     // this function will just be passed a callback\n *     readData: async.apply(fs.readFile, 'data.txt', 'utf-8'),\n *     showData: ['readData', function(results, cb) {\n *         // results.readData is the file's contents\n *         // ...\n *     }]\n * }, callback);\n *\n * async.auto({\n *     get_data: function(callback) {\n *         console.log('in get_data');\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         console.log('in make_folder');\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: ['get_data', 'make_folder', function(results, callback) {\n *         console.log('in write_file', JSON.stringify(results));\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(results, callback) {\n *         console.log('in email_link', JSON.stringify(results));\n *         // once the file is written let's email a link to it...\n *         // results.write_file contains the filename returned by write_file.\n *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *     }]\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('results = ', results);\n * });\n */\nvar auto = function (tasks, concurrency, callback) {\n    if (typeof concurrency === 'function') {\n        // concurrency is optional, shift the args.\n        callback = concurrency;\n        concurrency = null;\n    }\n    callback = once(callback || noop);\n    var keys$$1 = keys(tasks);\n    var numTasks = keys$$1.length;\n    if (!numTasks) {\n        return callback(null);\n    }\n    if (!concurrency) {\n        concurrency = numTasks;\n    }\n\n    var results = {};\n    var runningTasks = 0;\n    var hasError = false;\n\n    var listeners = {};\n\n    var readyTasks = [];\n\n    // for cycle detection:\n    var readyToCheck = []; // tasks that have been identified as reachable\n    // without the possibility of returning to an ancestor task\n    var uncheckedDependencies = {};\n\n    baseForOwn(tasks, function (task, key) {\n        if (!isArray(task)) {\n            // no dependencies\n            enqueueTask(key, [task]);\n            readyToCheck.push(key);\n            return;\n        }\n\n        var dependencies = task.slice(0, task.length - 1);\n        var remainingDependencies = dependencies.length;\n        if (remainingDependencies === 0) {\n            enqueueTask(key, task);\n            readyToCheck.push(key);\n            return;\n        }\n        uncheckedDependencies[key] = remainingDependencies;\n\n        arrayEach(dependencies, function (dependencyName) {\n            if (!tasks[dependencyName]) {\n                throw new Error('async.auto task `' + key + '` has a non-existent dependency in ' + dependencies.join(', '));\n            }\n            addListener(dependencyName, function () {\n                remainingDependencies--;\n                if (remainingDependencies === 0) {\n                    enqueueTask(key, task);\n                }\n            });\n        });\n    });\n\n    checkForDeadlocks();\n    processQueue();\n\n    function enqueueTask(key, task) {\n        readyTasks.push(function () {\n            runTask(key, task);\n        });\n    }\n\n    function processQueue() {\n        if (readyTasks.length === 0 && runningTasks === 0) {\n            return callback(null, results);\n        }\n        while (readyTasks.length && runningTasks < concurrency) {\n            var run = readyTasks.shift();\n            run();\n        }\n    }\n\n    function addListener(taskName, fn) {\n        var taskListeners = listeners[taskName];\n        if (!taskListeners) {\n            taskListeners = listeners[taskName] = [];\n        }\n\n        taskListeners.push(fn);\n    }\n\n    function taskComplete(taskName) {\n        var taskListeners = listeners[taskName] || [];\n        arrayEach(taskListeners, function (fn) {\n            fn();\n        });\n        processQueue();\n    }\n\n    function runTask(key, task) {\n        if (hasError) return;\n\n        var taskCallback = onlyOnce(rest(function (err, args) {\n            runningTasks--;\n            if (args.length <= 1) {\n                args = args[0];\n            }\n            if (err) {\n                var safeResults = {};\n                baseForOwn(results, function (val, rkey) {\n                    safeResults[rkey] = val;\n                });\n                safeResults[key] = args;\n                hasError = true;\n                listeners = [];\n\n                callback(err, safeResults);\n            } else {\n                results[key] = args;\n                taskComplete(key);\n            }\n        }));\n\n        runningTasks++;\n        var taskFn = task[task.length - 1];\n        if (task.length > 1) {\n            taskFn(results, taskCallback);\n        } else {\n            taskFn(taskCallback);\n        }\n    }\n\n    function checkForDeadlocks() {\n        // Kahn's algorithm\n        // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm\n        // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html\n        var currentTask;\n        var counter = 0;\n        while (readyToCheck.length) {\n            currentTask = readyToCheck.pop();\n            counter++;\n            arrayEach(getDependents(currentTask), function (dependent) {\n                if (--uncheckedDependencies[dependent] === 0) {\n                    readyToCheck.push(dependent);\n                }\n            });\n        }\n\n        if (counter !== numTasks) {\n            throw new Error('async.auto cannot execute tasks due to a recursive dependency');\n        }\n    }\n\n    function getDependents(taskName) {\n        var result = [];\n        baseForOwn(tasks, function (task, key) {\n            if (isArray(task) && baseIndexOf(task, taskName, 0) >= 0) {\n                result.push(key);\n            }\n        });\n        return result;\n    }\n};\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol$1 ? Symbol$1.prototype : undefined;\nvar symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the last unmatched string symbol.\n */\nfunction charsEndIndex(strSymbols, chrSymbols) {\n  var index = strSymbols.length;\n\n  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\n/**\n * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the first unmatched string symbol.\n */\nfunction charsStartIndex(strSymbols, chrSymbols) {\n  var index = -1,\n      length = strSymbols.length;\n\n  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff';\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23';\nvar rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0';\nvar rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange$1 = '\\\\ud800-\\\\udfff';\nvar rsComboMarksRange$1 = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23';\nvar rsComboSymbolsRange$1 = '\\\\u20d0-\\\\u20f0';\nvar rsVarRange$1 = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange$1 + ']';\nvar rsCombo = '[' + rsComboMarksRange$1 + rsComboSymbolsRange$1 + ']';\nvar rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]';\nvar rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')';\nvar rsNonAstral = '[^' + rsAstralRange$1 + ']';\nvar rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';\nvar rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';\nvar rsZWJ$1 = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?';\nvar rsOptVar = '[' + rsVarRange$1 + ']?';\nvar rsOptJoin = '(?:' + rsZWJ$1 + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';\nvar rsSeq = rsOptVar + reOptMod + rsOptJoin;\nvar rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/**\n * Removes leading and trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trim('  abc  ');\n * // => 'abc'\n *\n * _.trim('-_-abc-_-', '_-');\n * // => 'abc'\n *\n * _.map(['  foo  ', '  bar  '], _.trim);\n * // => ['foo', 'bar']\n */\nfunction trim(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrim, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      chrSymbols = stringToArray(chars),\n      start = charsStartIndex(strSymbols, chrSymbols),\n      end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n  return castSlice(strSymbols, start, end).join('');\n}\n\nvar FN_ARGS = /^(function)?\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;\nvar FN_ARG_SPLIT = /,/;\nvar FN_ARG = /(=.+)?(\\s*)$/;\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n\nfunction parseParams(func) {\n    func = func.toString().replace(STRIP_COMMENTS, '');\n    func = func.match(FN_ARGS)[2].replace(' ', '');\n    func = func ? func.split(FN_ARG_SPLIT) : [];\n    func = func.map(function (arg) {\n        return trim(arg.replace(FN_ARG, ''));\n    });\n    return func;\n}\n\n/**\n * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent\n * tasks are specified as parameters to the function, after the usual callback\n * parameter, with the parameter names matching the names of the tasks it\n * depends on. This can provide even more readable task graphs which can be\n * easier to maintain.\n *\n * If a final callback is specified, the task results are similarly injected,\n * specified as named parameters after the initial error parameter.\n *\n * The autoInject function is purely syntactic sugar and its semantics are\n * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}.\n *\n * @name autoInject\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.auto]{@link module:ControlFlow.auto}\n * @category Control Flow\n * @param {Object} tasks - An object, each of whose properties is a function of\n * the form 'func([dependencies...], callback). The object's key of a property\n * serves as the name of the task defined by that property, i.e. can be used\n * when specifying requirements for other tasks.\n * * The `callback` parameter is a `callback(err, result)` which must be called\n *   when finished, passing an `error` (which can be `null`) and the result of\n *   the function's execution. The remaining parameters name other tasks on\n *   which the task is dependent, and the results from those tasks are the\n *   arguments of those parameters.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback, and a `results` object with any completed\n * task results, similar to `auto`.\n * @example\n *\n * //  The example from `auto` can be rewritten as follows:\n * async.autoInject({\n *     get_data: function(callback) {\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: function(get_data, make_folder, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     },\n *     email_link: function(write_file, callback) {\n *         // once the file is written let's email a link to it...\n *         // write_file contains the filename returned by write_file.\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n *\n * // If you are using a JS minifier that mangles parameter names, `autoInject`\n * // will not work with plain functions, since the parameter names will be\n * // collapsed to a single letter identifier.  To work around this, you can\n * // explicitly specify the names of the parameters your task function needs\n * // in an array, similar to Angular.js dependency injection.\n *\n * // This still has an advantage over plain `auto`, since the results a task\n * // depends on are still spread into arguments.\n * async.autoInject({\n *     //...\n *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(write_file, callback) {\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }]\n *     //...\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n */\nfunction autoInject(tasks, callback) {\n    var newTasks = {};\n\n    baseForOwn(tasks, function (taskFn, key) {\n        var params;\n\n        if (isArray(taskFn)) {\n            params = taskFn.slice(0, -1);\n            taskFn = taskFn[taskFn.length - 1];\n\n            newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);\n        } else if (taskFn.length === 1) {\n            // no dependencies, use the function as-is\n            newTasks[key] = taskFn;\n        } else {\n            params = parseParams(taskFn);\n            if (taskFn.length === 0 && params.length === 0) {\n                throw new Error(\"autoInject task functions require explicit parameters.\");\n            }\n\n            params.pop();\n\n            newTasks[key] = params.concat(newTask);\n        }\n\n        function newTask(results, taskCb) {\n            var newArgs = arrayMap(params, function (name) {\n                return results[name];\n            });\n            newArgs.push(taskCb);\n            taskFn.apply(null, newArgs);\n        }\n    });\n\n    auto(newTasks, callback);\n}\n\nvar hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\nvar hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\nfunction fallback(fn) {\n    setTimeout(fn, 0);\n}\n\nfunction wrap(defer) {\n    return rest(function (fn, args) {\n        defer(function () {\n            fn.apply(null, args);\n        });\n    });\n}\n\nvar _defer;\n\nif (hasSetImmediate) {\n    _defer = setImmediate;\n} else if (hasNextTick) {\n    _defer = process.nextTick;\n} else {\n    _defer = fallback;\n}\n\nvar setImmediate$1 = wrap(_defer);\n\n// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation\n// used for queues. This implementation assumes that the node provided by the user can be modified\n// to adjust the next and last properties. We implement only the minimal functionality\n// for queue support.\nfunction DLL() {\n    this.head = this.tail = null;\n    this.length = 0;\n}\n\nfunction setInitial(dll, node) {\n    dll.length = 1;\n    dll.head = dll.tail = node;\n}\n\nDLL.prototype.removeLink = function (node) {\n    if (node.prev) node.prev.next = node.next;else this.head = node.next;\n    if (node.next) node.next.prev = node.prev;else this.tail = node.prev;\n\n    node.prev = node.next = null;\n    this.length -= 1;\n    return node;\n};\n\nDLL.prototype.empty = DLL;\n\nDLL.prototype.insertAfter = function (node, newNode) {\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next) node.next.prev = newNode;else this.tail = newNode;\n    node.next = newNode;\n    this.length += 1;\n};\n\nDLL.prototype.insertBefore = function (node, newNode) {\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev) node.prev.next = newNode;else this.head = newNode;\n    node.prev = newNode;\n    this.length += 1;\n};\n\nDLL.prototype.unshift = function (node) {\n    if (this.head) this.insertBefore(this.head, node);else setInitial(this, node);\n};\n\nDLL.prototype.push = function (node) {\n    if (this.tail) this.insertAfter(this.tail, node);else setInitial(this, node);\n};\n\nDLL.prototype.shift = function () {\n    return this.head && this.removeLink(this.head);\n};\n\nDLL.prototype.pop = function () {\n    return this.tail && this.removeLink(this.tail);\n};\n\nfunction queue(worker, concurrency, payload) {\n    if (concurrency == null) {\n        concurrency = 1;\n    } else if (concurrency === 0) {\n        throw new Error('Concurrency must not be zero');\n    }\n\n    function _insert(data, insertAtFront, callback) {\n        if (callback != null && typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n        if (!isArray(data)) {\n            data = [data];\n        }\n        if (data.length === 0 && q.idle()) {\n            // call drain immediately if there are no tasks\n            return setImmediate$1(function () {\n                q.drain();\n            });\n        }\n\n        for (var i = 0, l = data.length; i < l; i++) {\n            var item = {\n                data: data[i],\n                callback: callback || noop\n            };\n\n            if (insertAtFront) {\n                q._tasks.unshift(item);\n            } else {\n                q._tasks.push(item);\n            }\n        }\n        setImmediate$1(q.process);\n    }\n\n    function _next(tasks) {\n        return rest(function (args) {\n            workers -= 1;\n\n            for (var i = 0, l = tasks.length; i < l; i++) {\n                var task = tasks[i];\n                var index = baseIndexOf(workersList, task, 0);\n                if (index >= 0) {\n                    workersList.splice(index);\n                }\n\n                task.callback.apply(task, args);\n\n                if (args[0] != null) {\n                    q.error(args[0], task.data);\n                }\n            }\n\n            if (workers <= q.concurrency - q.buffer) {\n                q.unsaturated();\n            }\n\n            if (q.idle()) {\n                q.drain();\n            }\n            q.process();\n        });\n    }\n\n    var workers = 0;\n    var workersList = [];\n    var q = {\n        _tasks: new DLL(),\n        concurrency: concurrency,\n        payload: payload,\n        saturated: noop,\n        unsaturated: noop,\n        buffer: concurrency / 4,\n        empty: noop,\n        drain: noop,\n        error: noop,\n        started: false,\n        paused: false,\n        push: function (data, callback) {\n            _insert(data, false, callback);\n        },\n        kill: function () {\n            q.drain = noop;\n            q._tasks.empty();\n        },\n        unshift: function (data, callback) {\n            _insert(data, true, callback);\n        },\n        process: function () {\n            while (!q.paused && workers < q.concurrency && q._tasks.length) {\n                var tasks = [],\n                    data = [];\n                var l = q._tasks.length;\n                if (q.payload) l = Math.min(l, q.payload);\n                for (var i = 0; i < l; i++) {\n                    var node = q._tasks.shift();\n                    tasks.push(node);\n                    data.push(node.data);\n                }\n\n                if (q._tasks.length === 0) {\n                    q.empty();\n                }\n                workers += 1;\n                workersList.push(tasks[0]);\n\n                if (workers === q.concurrency) {\n                    q.saturated();\n                }\n\n                var cb = onlyOnce(_next(tasks));\n                worker(data, cb);\n            }\n        },\n        length: function () {\n            return q._tasks.length;\n        },\n        running: function () {\n            return workers;\n        },\n        workersList: function () {\n            return workersList;\n        },\n        idle: function () {\n            return q._tasks.length + workers === 0;\n        },\n        pause: function () {\n            q.paused = true;\n        },\n        resume: function () {\n            if (q.paused === false) {\n                return;\n            }\n            q.paused = false;\n            var resumeCount = Math.min(q.concurrency, q._tasks.length);\n            // Need to call q.process once per concurrent\n            // worker to preserve full concurrency after pause\n            for (var w = 1; w <= resumeCount; w++) {\n                setImmediate$1(q.process);\n            }\n        }\n    };\n    return q;\n}\n\n/**\n * A cargo of tasks for the worker function to complete. Cargo inherits all of\n * the same methods and event callbacks as [`queue`]{@link module:ControlFlow.queue}.\n * @typedef {Object} CargoObject\n * @memberOf module:ControlFlow\n * @property {Function} length - A function returning the number of items\n * waiting to be processed. Invoke like `cargo.length()`.\n * @property {number} payload - An `integer` for determining how many tasks\n * should be process per round. This property can be changed after a `cargo` is\n * created to alter the payload on-the-fly.\n * @property {Function} push - Adds `task` to the `queue`. The callback is\n * called once the `worker` has finished processing the task. Instead of a\n * single task, an array of `tasks` can be submitted. The respective callback is\n * used for every task in the list. Invoke like `cargo.push(task, [callback])`.\n * @property {Function} saturated - A callback that is called when the\n * `queue.length()` hits the concurrency and further tasks will be queued.\n * @property {Function} empty - A callback that is called when the last item\n * from the `queue` is given to a `worker`.\n * @property {Function} drain - A callback that is called when the last item\n * from the `queue` has returned from the `worker`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke like `cargo.idle()`.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke like `cargo.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke like `cargo.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. Invoke like `cargo.kill()`.\n */\n\n/**\n * Creates a `cargo` object with the specified payload. Tasks added to the\n * cargo will be processed altogether (up to the `payload` limit). If the\n * `worker` is in progress, the task is queued until it becomes available. Once\n * the `worker` has completed some tasks, each callback of those tasks is\n * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n * for how `cargo` and `queue` work.\n *\n * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n * at a time, cargo passes an array of tasks to a single worker, repeating\n * when the worker is finished.\n *\n * @name cargo\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {Function} worker - An asynchronous function for processing an array\n * of queued tasks, which must call its `callback(err)` argument when finished,\n * with an optional `err` argument. Invoked with `(tasks, callback)`.\n * @param {number} [payload=Infinity] - An optional `integer` for determining\n * how many tasks should be processed per round; if omitted, the default is\n * unlimited.\n * @returns {module:ControlFlow.CargoObject} A cargo object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the cargo and inner queue.\n * @example\n *\n * // create a cargo object with payload 2\n * var cargo = async.cargo(function(tasks, callback) {\n *     for (var i=0; i<tasks.length; i++) {\n *         console.log('hello ' + tasks[i].name);\n *     }\n *     callback();\n * }, 2);\n *\n * // add some items\n * cargo.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * cargo.push({name: 'bar'}, function(err) {\n *     console.log('finished processing bar');\n * });\n * cargo.push({name: 'baz'}, function(err) {\n *     console.log('finished processing baz');\n * });\n */\nfunction cargo(worker, payload) {\n  return queue(worker, 1, payload);\n}\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.\n *\n * @name eachOfSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`. The\n * `key` is the item's key, or index in the case of an array. The iteratee is\n * passed a `callback(err)` which must be called once it has completed. If no\n * error has occurred, the callback should be run without arguments or with an\n * explicit `null` argument. Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Invoked with (err).\n */\nvar eachOfSeries = doLimit(eachOfLimit, 1);\n\n/**\n * Reduces `coll` into a single value using an async `iteratee` to return each\n * successive step. `memo` is the initial state of the reduction. This function\n * only operates in series.\n *\n * For performance reasons, it may make sense to split a call to this function\n * into a parallel map, and then use the normal `Array.prototype.reduce` on the\n * results. This function is for situations where each step in the reduction\n * needs to be async; if you can get the data before reducing it, then it's\n * probably a good idea to do so.\n *\n * @name reduce\n * @static\n * @memberOf module:Collections\n * @method\n * @alias inject\n * @alias foldl\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {Function} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction. The `iteratee` is passed a\n * `callback(err, reduction)` which accepts an optional error as its first\n * argument, and the state of the reduction as the second. If an error is\n * passed to the callback, the reduction is stopped and the main `callback` is\n * immediately called with the error. Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n * @example\n *\n * async.reduce([1,2,3], 0, function(memo, item, callback) {\n *     // pointless async:\n *     process.nextTick(function() {\n *         callback(null, memo + item)\n *     });\n * }, function(err, result) {\n *     // result is now equal to the last value of memo, which is 6\n * });\n */\nfunction reduce(coll, memo, iteratee, callback) {\n    callback = once(callback || noop);\n    eachOfSeries(coll, function (x, i, callback) {\n        iteratee(memo, x, function (err, v) {\n            memo = v;\n            callback(err);\n        });\n    }, function (err) {\n        callback(err, memo);\n    });\n}\n\n/**\n * Version of the compose function that is more natural to read. Each function\n * consumes the return value of the previous function. It is the equivalent of\n * [compose]{@link module:ControlFlow.compose} with the arguments reversed.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name seq\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.compose]{@link module:ControlFlow.compose}\n * @category Control Flow\n * @param {...Function} functions - the asynchronous functions to compose\n * @returns {Function} a function that composes the `functions` in order\n * @example\n *\n * // Requires lodash (or underscore), express3 and dresende's orm2.\n * // Part of an app, that fetches cats of the logged user.\n * // This example uses `seq` function to avoid overnesting and error\n * // handling clutter.\n * app.get('/cats', function(request, response) {\n *     var User = request.models.User;\n *     async.seq(\n *         _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))\n *         function(user, fn) {\n *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))\n *         }\n *     )(req.session.user_id, function (err, cats) {\n *         if (err) {\n *             console.error(err);\n *             response.json({ status: 'error', message: err.message });\n *         } else {\n *             response.json({ status: 'ok', message: 'Cats found', data: cats });\n *         }\n *     });\n * });\n */\nvar seq$1 = rest(function seq(functions) {\n    return rest(function (args) {\n        var that = this;\n\n        var cb = args[args.length - 1];\n        if (typeof cb == 'function') {\n            args.pop();\n        } else {\n            cb = noop;\n        }\n\n        reduce(functions, args, function (newargs, fn, cb) {\n            fn.apply(that, newargs.concat([rest(function (err, nextargs) {\n                cb(err, nextargs);\n            })]));\n        }, function (err, results) {\n            cb.apply(that, [err].concat(results));\n        });\n    });\n});\n\n/**\n * Creates a function which is a composition of the passed asynchronous\n * functions. Each function consumes the return value of the function that\n * follows. Composing functions `f()`, `g()`, and `h()` would produce the result\n * of `f(g(h()))`, only this version uses callbacks to obtain the return values.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name compose\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {...Function} functions - the asynchronous functions to compose\n * @returns {Function} an asynchronous function that is the composed\n * asynchronous `functions`\n * @example\n *\n * function add1(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n + 1);\n *     }, 10);\n * }\n *\n * function mul3(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n * 3);\n *     }, 10);\n * }\n *\n * var add1mul3 = async.compose(mul3, add1);\n * add1mul3(4, function (err, result) {\n *     // result now equals 15\n * });\n */\nvar compose = rest(function (args) {\n  return seq$1.apply(null, args.reverse());\n});\n\nfunction concat$1(eachfn, arr, fn, callback) {\n    var result = [];\n    eachfn(arr, function (x, index, cb) {\n        fn(x, function (err, y) {\n            result = result.concat(y || []);\n            cb(err);\n        });\n    }, function (err) {\n        callback(err, result);\n    });\n}\n\n/**\n * Applies `iteratee` to each item in `coll`, concatenating the results. Returns\n * the concatenated list. The `iteratee`s are called in parallel, and the\n * results are concatenated as they return. There is no guarantee that the\n * results array will be returned in the original order of `coll` passed to the\n * `iteratee` function.\n *\n * @name concat\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, results)` which must be called once\n * it has completed with an error (which can be `null`) and an array of results.\n * Invoked with (item, callback).\n * @param {Function} [callback(err)] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @example\n *\n * async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files) {\n *     // files is now a list of filenames that exist in the 3 directories\n * });\n */\nvar concat = doParallel(concat$1);\n\nfunction doSeries(fn) {\n    return function (obj, iteratee, callback) {\n        return fn(eachOfSeries, obj, iteratee, callback);\n    };\n}\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.\n *\n * @name concatSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, results)` which must be called once\n * it has completed with an error (which can be `null`) and an array of results.\n * Invoked with (item, callback).\n * @param {Function} [callback(err)] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n */\nvar concatSeries = doSeries(concat$1);\n\n/**\n * Returns a function that when called, calls-back with the values provided.\n * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to\n * [`auto`]{@link module:ControlFlow.auto}.\n *\n * @name constant\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {...*} arguments... - Any number of arguments to automatically invoke\n * callback with.\n * @returns {Function} Returns a function that when invoked, automatically\n * invokes the callback with the previous given arguments.\n * @example\n *\n * async.waterfall([\n *     async.constant(42),\n *     function (value, next) {\n *         // value === 42\n *     },\n *     //...\n * ], callback);\n *\n * async.waterfall([\n *     async.constant(filename, \"utf8\"),\n *     fs.readFile,\n *     function (fileData, next) {\n *         //...\n *     }\n *     //...\n * ], callback);\n *\n * async.auto({\n *     hostname: async.constant(\"https://server.net/\"),\n *     port: findFreePort,\n *     launchServer: [\"hostname\", \"port\", function (options, cb) {\n *         startServer(options, cb);\n *     }],\n *     //...\n * }, callback);\n */\nvar constant = rest(function (values) {\n    var args = [null].concat(values);\n    return initialParams(function (ignoredArgs, callback) {\n        return callback.apply(this, args);\n    });\n});\n\nfunction _createTester(eachfn, check, getResult) {\n    return function (arr, limit, iteratee, cb) {\n        function done() {\n            if (cb) {\n                cb(null, getResult(false));\n            }\n        }\n        function wrappedIteratee(x, _, callback) {\n            if (!cb) return callback();\n            iteratee(x, function (err, v) {\n                // Check cb as another iteratee may have resolved with a\n                // value or error since we started this iteratee\n                if (cb && (err || check(v))) {\n                    if (err) cb(err);else cb(err, getResult(true, x));\n                    cb = iteratee = false;\n                    callback(err, breakLoop);\n                } else {\n                    callback();\n                }\n            });\n        }\n        if (arguments.length > 3) {\n            cb = cb || noop;\n            eachfn(arr, limit, wrappedIteratee, done);\n        } else {\n            cb = iteratee;\n            cb = cb || noop;\n            iteratee = limit;\n            eachfn(arr, wrappedIteratee, done);\n        }\n    };\n}\n\nfunction _findGetResult(v, x) {\n    return x;\n}\n\n/**\n * Returns the first value in `coll` that passes an async truth test. The\n * `iteratee` is applied in parallel, meaning the first iteratee to return\n * `true` will fire the detect `callback` with that result. That means the\n * result might not be the first item in the original `coll` (in terms of order)\n * that passes the test.\n\n * If order within the original `coll` is important, then look at\n * [`detectSeries`]{@link module:Collections.detectSeries}.\n *\n * @name detect\n * @static\n * @memberOf module:Collections\n * @method\n * @alias find\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, truthValue)` which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @example\n *\n * async.detect(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // result now equals the first file in the list that exists\n * });\n */\nvar detect = _createTester(eachOf, identity, _findGetResult);\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name detectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findLimit\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, truthValue)` which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n */\nvar detectLimit = _createTester(eachOfLimit, identity, _findGetResult);\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.\n *\n * @name detectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findSeries\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, truthValue)` which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n */\nvar detectSeries = _createTester(eachOfSeries, identity, _findGetResult);\n\nfunction consoleFunc(name) {\n    return rest(function (fn, args) {\n        fn.apply(null, args.concat([rest(function (err, args) {\n            if (typeof console === 'object') {\n                if (err) {\n                    if (console.error) {\n                        console.error(err);\n                    }\n                } else if (console[name]) {\n                    arrayEach(args, function (x) {\n                        console[name](x);\n                    });\n                }\n            }\n        })]));\n    });\n}\n\n/**\n * Logs the result of an `async` function to the `console` using `console.dir`\n * to display the properties of the resulting object. Only works in Node.js or\n * in browsers that support `console.dir` and `console.error` (such as FF and\n * Chrome). If multiple arguments are returned from the async function,\n * `console.dir` is called on each argument in order.\n *\n * @name dir\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} function - The function you want to eventually apply all\n * arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, {hello: name});\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.dir(hello, 'world');\n * {hello: 'world'}\n */\nvar dir = consoleFunc('dir');\n\n/**\n * The post-check version of [`during`]{@link module:ControlFlow.during}. To reflect the difference in\n * the order of operations, the arguments `test` and `fn` are switched.\n *\n * Also a version of [`doWhilst`]{@link module:ControlFlow.doWhilst} with asynchronous `test` function.\n * @name doDuring\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.during]{@link module:ControlFlow.during}\n * @category Control Flow\n * @param {Function} fn - A function which is called each time `test` passes.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} test - asynchronous truth test to perform before each\n * execution of `fn`. Invoked with (...args, callback), where `...args` are the\n * non-error args from the previous callback of `fn`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error if one occured, otherwise `null`.\n */\nfunction doDuring(fn, test, callback) {\n    callback = onlyOnce(callback || noop);\n\n    var next = rest(function (err, args) {\n        if (err) return callback(err);\n        args.push(check);\n        test.apply(this, args);\n    });\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (!truth) return callback(null);\n        fn(next);\n    }\n\n    check(null, true);\n}\n\n/**\n * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in\n * the order of operations, the arguments `test` and `iteratee` are switched.\n *\n * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n *\n * @name doWhilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {Function} iteratee - A function which is called each time `test`\n * passes. The function is passed a `callback(err)`, which must be called once\n * it has completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} test - synchronous truth test to perform after each\n * execution of `iteratee`. Invoked with the non-error callback results of \n * `iteratee`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped.\n * `callback` will be passed an error and any arguments passed to the final\n * `iteratee`'s callback. Invoked with (err, [results]);\n */\nfunction doWhilst(iteratee, test, callback) {\n    callback = onlyOnce(callback || noop);\n    var next = rest(function (err, args) {\n        if (err) return callback(err);\n        if (test.apply(this, args)) return iteratee(next);\n        callback.apply(null, [null].concat(args));\n    });\n    iteratee(next);\n}\n\n/**\n * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the\n * argument ordering differs from `until`.\n *\n * @name doUntil\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}\n * @category Control Flow\n * @param {Function} fn - A function which is called each time `test` fails.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} test - synchronous truth test to perform after each\n * execution of `fn`. Invoked with the non-error callback results of `fn`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `fn`'s\n * callback. Invoked with (err, [results]);\n */\nfunction doUntil(fn, test, callback) {\n    doWhilst(fn, function () {\n        return !test.apply(this, arguments);\n    }, callback);\n}\n\n/**\n * Like [`whilst`]{@link module:ControlFlow.whilst}, except the `test` is an asynchronous function that\n * is passed a callback in the form of `function (err, truth)`. If error is\n * passed to `test` or `fn`, the main callback is immediately called with the\n * value of the error.\n *\n * @name during\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {Function} test - asynchronous truth test to perform before each\n * execution of `fn`. Invoked with (callback).\n * @param {Function} fn - A function which is called each time `test` passes.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error, if one occured, otherwise `null`.\n * @example\n *\n * var count = 0;\n *\n * async.during(\n *     function (callback) {\n *         return callback(null, count < 5);\n *     },\n *     function (callback) {\n *         count++;\n *         setTimeout(callback, 1000);\n *     },\n *     function (err) {\n *         // 5 seconds have passed\n *     }\n * );\n */\nfunction during(test, fn, callback) {\n    callback = onlyOnce(callback || noop);\n\n    function next(err) {\n        if (err) return callback(err);\n        test(check);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (!truth) return callback(null);\n        fn(next);\n    }\n\n    test(check);\n}\n\nfunction _withoutIndex(iteratee) {\n    return function (value, index, callback) {\n        return iteratee(value, callback);\n    };\n}\n\n/**\n * Applies the function `iteratee` to each item in `coll`, in parallel.\n * The `iteratee` is called with an item from the list, and a callback for when\n * it has finished. If the `iteratee` passes an error to its `callback`, the\n * main `callback` (for the `each` function) is immediately called with the\n * error.\n *\n * Note, that since this function applies `iteratee` to each item in parallel,\n * there is no guarantee that the iteratee functions will complete in order.\n *\n * @name each\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEach\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item\n * in `coll`. The iteratee is passed a `callback(err)` which must be called once\n * it has completed. If no error has occurred, the `callback` should be run\n * without arguments or with an explicit `null` argument. The array index is not\n * passed to the iteratee. Invoked with (item, callback). If you need the index,\n * use `eachOf`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * // assuming openFiles is an array of file names and saveFile is a function\n * // to save the modified contents of that file:\n *\n * async.each(openFiles, saveFile, function(err){\n *   // if any of the saves produced an error, err would equal that error\n * });\n *\n * // assuming openFiles is an array of file names\n * async.each(openFiles, function(file, callback) {\n *\n *     // Perform operation on file here.\n *     console.log('Processing file ' + file);\n *\n *     if( file.length > 32 ) {\n *       console.log('This file name is too long');\n *       callback('File name too long');\n *     } else {\n *       // Do work to process file here\n *       console.log('File processed');\n *       callback();\n *     }\n * }, function(err) {\n *     // if any of the file processing produced an error, err would equal that error\n *     if( err ) {\n *       // One of the iterations produced an error.\n *       // All processing will now stop.\n *       console.log('A file failed to process');\n *     } else {\n *       console.log('All files have been processed successfully');\n *     }\n * });\n */\nfunction eachLimit(coll, iteratee, callback) {\n  eachOf(coll, _withoutIndex(iteratee), callback);\n}\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n *\n * @name eachLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each item in `coll`. The\n * iteratee is passed a `callback(err)` which must be called once it has\n * completed. If no error has occurred, the `callback` should be run without\n * arguments or with an explicit `null` argument. The array index is not passed\n * to the iteratee. Invoked with (item, callback). If you need the index, use\n * `eachOfLimit`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nfunction eachLimit$1(coll, limit, iteratee, callback) {\n  _eachOfLimit(limit)(coll, _withoutIndex(iteratee), callback);\n}\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.\n *\n * @name eachSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each\n * item in `coll`. The iteratee is passed a `callback(err)` which must be called\n * once it has completed. If no error has occurred, the `callback` should be run\n * without arguments or with an explicit `null` argument. The array index is\n * not passed to the iteratee. Invoked with (item, callback). If you need the\n * index, use `eachOfSeries`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nvar eachSeries = doLimit(eachLimit$1, 1);\n\n/**\n * Wrap an async function and ensure it calls its callback on a later tick of\n * the event loop.  If the function already calls its callback on a next tick,\n * no extra deferral is added. This is useful for preventing stack overflows\n * (`RangeError: Maximum call stack size exceeded`) and generally keeping\n * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)\n * contained.\n *\n * @name ensureAsync\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - an async function, one that expects a node-style\n * callback as its last argument.\n * @returns {Function} Returns a wrapped function with the exact same call\n * signature as the function passed in.\n * @example\n *\n * function sometimesAsync(arg, callback) {\n *     if (cache[arg]) {\n *         return callback(null, cache[arg]); // this would be synchronous!!\n *     } else {\n *         doSomeIO(arg, callback); // this IO would be asynchronous\n *     }\n * }\n *\n * // this has a risk of stack overflows if many results are cached in a row\n * async.mapSeries(args, sometimesAsync, done);\n *\n * // this will defer sometimesAsync's callback if necessary,\n * // preventing stack overflows\n * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);\n */\nfunction ensureAsync(fn) {\n    return initialParams(function (args, callback) {\n        var sync = true;\n        args.push(function () {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate$1(function () {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        fn.apply(this, args);\n        sync = false;\n    });\n}\n\nfunction notId(v) {\n    return !v;\n}\n\n/**\n * Returns `true` if every element in `coll` satisfies an async test. If any\n * iteratee call returns `false`, the main `callback` is immediately called.\n *\n * @name every\n * @static\n * @memberOf module:Collections\n * @method\n * @alias all\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in the\n * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n * which must be called with a  boolean argument once it has completed. Invoked\n * with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @example\n *\n * async.every(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then every file exists\n * });\n */\nvar every = _createTester(eachOf, notId, notId);\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.\n *\n * @name everyLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in the\n * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n * which must be called with a  boolean argument once it has completed. Invoked\n * with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n */\nvar everyLimit = _createTester(eachOfLimit, notId, notId);\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time.\n *\n * @name everySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in the\n * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n * which must be called with a  boolean argument once it has completed. Invoked\n * with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n */\nvar everySeries = doLimit(everyLimit, 1);\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nfunction filterArray(eachfn, arr, iteratee, callback) {\n    var truthValues = new Array(arr.length);\n    eachfn(arr, function (x, index, callback) {\n        iteratee(x, function (err, v) {\n            truthValues[index] = !!v;\n            callback(err);\n        });\n    }, function (err) {\n        if (err) return callback(err);\n        var results = [];\n        for (var i = 0; i < arr.length; i++) {\n            if (truthValues[i]) results.push(arr[i]);\n        }\n        callback(null, results);\n    });\n}\n\nfunction filterGeneric(eachfn, coll, iteratee, callback) {\n    var results = [];\n    eachfn(coll, function (x, index, callback) {\n        iteratee(x, function (err, v) {\n            if (err) {\n                callback(err);\n            } else {\n                if (v) {\n                    results.push({ index: index, value: x });\n                }\n                callback();\n            }\n        });\n    }, function (err) {\n        if (err) {\n            callback(err);\n        } else {\n            callback(null, arrayMap(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), baseProperty('value')));\n        }\n    });\n}\n\nfunction _filter(eachfn, coll, iteratee, callback) {\n    var filter = isArrayLike(coll) ? filterArray : filterGeneric;\n    filter(eachfn, coll, iteratee, callback || noop);\n}\n\n/**\n * Returns a new array of all the values in `coll` which pass an async truth\n * test. This operation is performed in parallel, but the results array will be\n * in the same order as the original.\n *\n * @name filter\n * @static\n * @memberOf module:Collections\n * @method\n * @alias select\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @example\n *\n * async.filter(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, results) {\n *     // results now equals an array of the existing files\n * });\n */\nvar filter = doParallel(_filter);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name filterLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar filterLimit = doParallelLimit(_filter);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time.\n *\n * @name filterSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results)\n */\nvar filterSeries = doLimit(filterLimit, 1);\n\n/**\n * Calls the asynchronous function `fn` with a callback parameter that allows it\n * to call itself again, in series, indefinitely.\n\n * If an error is passed to the\n * callback then `errback` is called with the error, and execution stops,\n * otherwise it will never be called.\n *\n * @name forever\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Function} fn - a function to call repeatedly. Invoked with (next).\n * @param {Function} [errback] - when `fn` passes an error to it's callback,\n * this function will be called, and execution stops. Invoked with (err).\n * @example\n *\n * async.forever(\n *     function(next) {\n *         // next is suitable for passing to things that need a callback(err [, whatever]);\n *         // it will result in this function being called again.\n *     },\n *     function(err) {\n *         // if next is called with a value in its first parameter, it will appear\n *         // in here as 'err', and execution will stop.\n *     }\n * );\n */\nfunction forever(fn, errback) {\n    var done = onlyOnce(errback || noop);\n    var task = ensureAsync(fn);\n\n    function next(err) {\n        if (err) return done(err);\n        task(next);\n    }\n    next();\n}\n\n/**\n * Logs the result of an `async` function to the `console`. Only works in\n * Node.js or in browsers that support `console.log` and `console.error` (such\n * as FF and Chrome). If multiple arguments are returned from the async\n * function, `console.log` is called on each argument in order.\n *\n * @name log\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} function - The function you want to eventually apply all\n * arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, 'hello ' + name);\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.log(hello, 'world');\n * 'hello world'\n */\nvar log = consoleFunc('log');\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name mapValuesLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each value in `obj`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed value. Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n */\nfunction mapValuesLimit(obj, limit, iteratee, callback) {\n    callback = once(callback || noop);\n    var newObj = {};\n    eachOfLimit(obj, limit, function (val, key, next) {\n        iteratee(val, key, function (err, result) {\n            if (err) return next(err);\n            newObj[key] = result;\n            next();\n        });\n    }, function (err) {\n        callback(err, newObj);\n    });\n}\n\n/**\n * A relative of [`map`]{@link module:Collections.map}, designed for use with objects.\n *\n * Produces a new Object by mapping each value of `obj` through the `iteratee`\n * function. The `iteratee` is called each `value` and `key` from `obj` and a\n * callback for when it has finished processing. Each of these callbacks takes\n * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`\n * passes an error to its callback, the main `callback` (for the `mapValues`\n * function) is immediately called with the error.\n *\n * Note, the order of the keys in the result is not guaranteed.  The keys will\n * be roughly in the order they complete, (but this is very engine-specific)\n *\n * @name mapValues\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each value and key in\n * `coll`. The iteratee is passed a `callback(err, transformed)` which must be\n * called once it has completed with an error (which can be `null`) and a\n * transformed value. Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @example\n *\n * async.mapValues({\n *     f1: 'file1',\n *     f2: 'file2',\n *     f3: 'file3'\n * }, function (file, key, callback) {\n *   fs.stat(file, callback);\n * }, function(err, result) {\n *     // result is now a map of stats for each file, e.g.\n *     // {\n *     //     f1: [stats for file1],\n *     //     f2: [stats for file2],\n *     //     f3: [stats for file3]\n *     // }\n * });\n */\n\nvar mapValues = doLimit(mapValuesLimit, Infinity);\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time.\n *\n * @name mapValuesSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each value in `obj`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed value. Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n */\nvar mapValuesSeries = doLimit(mapValuesLimit, 1);\n\nfunction has(obj, key) {\n    return key in obj;\n}\n\n/**\n * Caches the results of an `async` function. When creating a hash to store\n * function results against, the callback is omitted from the hash and an\n * optional hash function can be used.\n *\n * If no hash function is specified, the first argument is used as a hash key,\n * which may work reasonably if it is a string or a data type that converts to a\n * distinct string. Note that objects and arrays will not behave reasonably.\n * Neither will cases where the other arguments are significant. In such cases,\n * specify your own hash function.\n *\n * The cache of results is exposed as the `memo` property of the function\n * returned by `memoize`.\n *\n * @name memoize\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - The function to proxy and cache results from.\n * @param {Function} hasher - An optional function for generating a custom hash\n * for storing results. It has all the arguments applied to it apart from the\n * callback, and must be synchronous.\n * @returns {Function} a memoized version of `fn`\n * @example\n *\n * var slow_fn = function(name, callback) {\n *     // do something\n *     callback(null, result);\n * };\n * var fn = async.memoize(slow_fn);\n *\n * // fn can now be used as if it were slow_fn\n * fn('some name', function() {\n *     // callback\n * });\n */\nfunction memoize(fn, hasher) {\n    var memo = Object.create(null);\n    var queues = Object.create(null);\n    hasher = hasher || identity;\n    var memoized = initialParams(function memoized(args, callback) {\n        var key = hasher.apply(null, args);\n        if (has(memo, key)) {\n            setImmediate$1(function () {\n                callback.apply(null, memo[key]);\n            });\n        } else if (has(queues, key)) {\n            queues[key].push(callback);\n        } else {\n            queues[key] = [callback];\n            fn.apply(null, args.concat([rest(function (args) {\n                memo[key] = args;\n                var q = queues[key];\n                delete queues[key];\n                for (var i = 0, l = q.length; i < l; i++) {\n                    q[i].apply(null, args);\n                }\n            })]));\n        }\n    });\n    memoized.memo = memo;\n    memoized.unmemoized = fn;\n    return memoized;\n}\n\n/**\n * Calls `callback` on a later loop around the event loop. In Node.js this just\n * calls `setImmediate`.  In the browser it will use `setImmediate` if\n * available, otherwise `setTimeout(callback, 0)`, which means other higher\n * priority events may precede the execution of `callback`.\n *\n * This is used internally for browser-compatibility purposes.\n *\n * @name nextTick\n * @static\n * @memberOf module:Utils\n * @method\n * @alias setImmediate\n * @category Util\n * @param {Function} callback - The function to call on a later loop around\n * the event loop. Invoked with (args...).\n * @param {...*} args... - any number of additional arguments to pass to the\n * callback on the next tick.\n * @example\n *\n * var call_order = [];\n * async.nextTick(function() {\n *     call_order.push('two');\n *     // call_order now equals ['one','two']\n * });\n * call_order.push('one');\n *\n * async.setImmediate(function (a, b, c) {\n *     // a, b, and c equal 1, 2, and 3\n * }, 1, 2, 3);\n */\nvar _defer$1;\n\nif (hasNextTick) {\n    _defer$1 = process.nextTick;\n} else if (hasSetImmediate) {\n    _defer$1 = setImmediate;\n} else {\n    _defer$1 = fallback;\n}\n\nvar nextTick = wrap(_defer$1);\n\nfunction _parallel(eachfn, tasks, callback) {\n    callback = callback || noop;\n    var results = isArrayLike(tasks) ? [] : {};\n\n    eachfn(tasks, function (task, key, callback) {\n        task(rest(function (err, args) {\n            if (args.length <= 1) {\n                args = args[0];\n            }\n            results[key] = args;\n            callback(err);\n        }));\n    }, function (err) {\n        callback(err, results);\n    });\n}\n\n/**\n * Run the `tasks` collection of functions in parallel, without waiting until\n * the previous function has completed. If any of the functions pass an error to\n * its callback, the main `callback` is immediately called with the value of the\n * error. Once the `tasks` have completed, the results are passed to the final\n * `callback` as an array.\n *\n * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about\n * parallel execution of code.  If your tasks do not use any timers or perform\n * any I/O, they will actually be executed in series.  Any synchronous setup\n * sections for each task will happen one after the other.  JavaScript remains\n * single-threaded.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n * results from {@link async.parallel}.\n *\n * @name parallel\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection containing functions to run.\n * Each function is passed a `callback(err, result)` which it must call on\n * completion with an error `err` (which can be `null`) and an optional `result`\n * value.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n * @example\n * async.parallel([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // the results array will equal ['one','two'] even though\n *     // the second function had a shorter timeout.\n * });\n *\n * // an example using an object instead of an array\n * async.parallel({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equals to: {one: 1, two: 2}\n * });\n */\nfunction parallelLimit(tasks, callback) {\n  _parallel(eachOf, tasks, callback);\n}\n\n/**\n * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name parallelLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.parallel]{@link module:ControlFlow.parallel}\n * @category Control Flow\n * @param {Array|Collection} tasks - A collection containing functions to run.\n * Each function is passed a `callback(err, result)` which it must call on\n * completion with an error `err` (which can be `null`) and an optional `result`\n * value.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n */\nfunction parallelLimit$1(tasks, limit, callback) {\n  _parallel(_eachOfLimit(limit), tasks, callback);\n}\n\n/**\n * A queue of tasks for the worker function to complete.\n * @typedef {Object} QueueObject\n * @memberOf module:ControlFlow\n * @property {Function} length - a function returning the number of items\n * waiting to be processed. Invoke with `queue.length()`.\n * @property {boolean} started - a boolean indicating whether or not any\n * items have been pushed and processed by the queue.\n * @property {Function} running - a function returning the number of items\n * currently being processed. Invoke with `queue.running()`.\n * @property {Function} workersList - a function returning the array of items\n * currently being processed. Invoke with `queue.workersList()`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke with `queue.idle()`.\n * @property {number} concurrency - an integer for determining how many `worker`\n * functions should be run in parallel. This property can be changed after a\n * `queue` is created to alter the concurrency on-the-fly.\n * @property {Function} push - add a new task to the `queue`. Calls `callback`\n * once the `worker` has finished processing the task. Instead of a single task,\n * a `tasks` array can be submitted. The respective callback is used for every\n * task in the list. Invoke with `queue.push(task, [callback])`,\n * @property {Function} unshift - add a new task to the front of the `queue`.\n * Invoke with `queue.unshift(task, [callback])`.\n * @property {Function} saturated - a callback that is called when the number of\n * running workers hits the `concurrency` limit, and further tasks will be\n * queued.\n * @property {Function} unsaturated - a callback that is called when the number\n * of running workers is less than the `concurrency` & `buffer` limits, and\n * further tasks will not be queued.\n * @property {number} buffer - A minimum threshold buffer in order to say that\n * the `queue` is `unsaturated`.\n * @property {Function} empty - a callback that is called when the last item\n * from the `queue` is given to a `worker`.\n * @property {Function} drain - a callback that is called when the last item\n * from the `queue` has returned from the `worker`.\n * @property {Function} error - a callback that is called when a task errors.\n * Has the signature `function(error, task)`.\n * @property {boolean} paused - a boolean for determining whether the queue is\n * in a paused state.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke with `queue.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke with `queue.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. Invoke with `queue.kill()`.\n */\n\n/**\n * Creates a `queue` object with the specified `concurrency`. Tasks added to the\n * `queue` are processed in parallel (up to the `concurrency` limit). If all\n * `worker`s are in progress, the task is queued until one becomes available.\n * Once a `worker` completes a `task`, that `task`'s callback is called.\n *\n * @name queue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Function} worker - An asynchronous function for processing a queued\n * task, which must call its `callback(err)` argument when finished, with an\n * optional `error` as an argument.  If you want to handle errors from an\n * individual task, pass a callback to `q.push()`. Invoked with\n * (task, callback).\n * @param {number} [concurrency=1] - An `integer` for determining how many\n * `worker` functions should be run in parallel.  If omitted, the concurrency\n * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the queue.\n * @example\n *\n * // create a queue object with concurrency 2\n * var q = async.queue(function(task, callback) {\n *     console.log('hello ' + task.name);\n *     callback();\n * }, 2);\n *\n * // assign a callback\n * q.drain = function() {\n *     console.log('all items have been processed');\n * };\n *\n * // add some items to the queue\n * q.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * q.push({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n *\n * // add some items to the queue (batch-wise)\n * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {\n *     console.log('finished processing item');\n * });\n *\n * // add some items to the front of the queue\n * q.unshift({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n */\nvar queue$1 = function (worker, concurrency) {\n  return queue(function (items, cb) {\n    worker(items[0], cb);\n  }, concurrency, 1);\n};\n\n/**\n * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and\n * completed in ascending priority order.\n *\n * @name priorityQueue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {Function} worker - An asynchronous function for processing a queued\n * task, which must call its `callback(err)` argument when finished, with an\n * optional `error` as an argument.  If you want to handle errors from an\n * individual task, pass a callback to `q.push()`. Invoked with\n * (task, callback).\n * @param {number} concurrency - An `integer` for determining how many `worker`\n * functions should be run in parallel.  If omitted, the concurrency defaults to\n * `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two\n * differences between `queue` and `priorityQueue` objects:\n * * `push(task, priority, [callback])` - `priority` should be a number. If an\n *   array of `tasks` is given, all tasks will be assigned the same priority.\n * * The `unshift` method was removed.\n */\nvar priorityQueue = function (worker, concurrency) {\n    // Start with a normal queue\n    var q = queue$1(worker, concurrency);\n\n    // Override push to accept second parameter representing priority\n    q.push = function (data, priority, callback) {\n        if (callback == null) callback = noop;\n        if (typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n        if (!isArray(data)) {\n            data = [data];\n        }\n        if (data.length === 0) {\n            // call drain immediately if there are no tasks\n            return setImmediate$1(function () {\n                q.drain();\n            });\n        }\n\n        priority = priority || 0;\n        var nextNode = q._tasks.head;\n        while (nextNode && priority >= nextNode.priority) {\n            nextNode = nextNode.next;\n        }\n\n        for (var i = 0, l = data.length; i < l; i++) {\n            var item = {\n                data: data[i],\n                priority: priority,\n                callback: callback\n            };\n\n            if (nextNode) {\n                q._tasks.insertBefore(nextNode, item);\n            } else {\n                q._tasks.push(item);\n            }\n        }\n        setImmediate$1(q.process);\n    };\n\n    // Remove unshift function\n    delete q.unshift;\n\n    return q;\n};\n\n/**\n * Runs the `tasks` array of functions in parallel, without waiting until the\n * previous function has completed. Once any of the `tasks` complete or pass an\n * error to its callback, the main `callback` is immediately called. It's\n * equivalent to `Promise.race()`.\n *\n * @name race\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array containing functions to run. Each function\n * is passed a `callback(err, result)` which it must call on completion with an\n * error `err` (which can be `null`) and an optional `result` value.\n * @param {Function} callback - A callback to run once any of the functions have\n * completed. This function gets an error or result from the first function that\n * completed. Invoked with (err, result).\n * @returns undefined\n * @example\n *\n * async.race([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // main callback\n * function(err, result) {\n *     // the result will be equal to 'two' as it finishes earlier\n * });\n */\nfunction race(tasks, callback) {\n    callback = once(callback || noop);\n    if (!isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));\n    if (!tasks.length) return callback();\n    for (var i = 0, l = tasks.length; i < l; i++) {\n        tasks[i](callback);\n    }\n}\n\nvar slice = Array.prototype.slice;\n\n/**\n * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order.\n *\n * @name reduceRight\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reduce]{@link module:Collections.reduce}\n * @alias foldr\n * @category Collection\n * @param {Array} array - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {Function} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction. The `iteratee` is passed a\n * `callback(err, reduction)` which accepts an optional error as its first\n * argument, and the state of the reduction as the second. If an error is\n * passed to the callback, the reduction is stopped and the main `callback` is\n * immediately called with the error. Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n */\nfunction reduceRight(array, memo, iteratee, callback) {\n  var reversed = slice.call(array).reverse();\n  reduce(reversed, memo, iteratee, callback);\n}\n\n/**\n * Wraps the function in another function that always returns data even when it\n * errors.\n *\n * The object returned has either the property `error` or `value`.\n *\n * @name reflect\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - The function you want to wrap\n * @returns {Function} - A function that always passes null to it's callback as\n * the error. The second argument to the callback will be an `object` with\n * either an `error` or a `value` property.\n * @example\n *\n * async.parallel([\n *     async.reflect(function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff but error ...\n *         callback('bad stuff happened');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     })\n * ],\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = 'bad stuff happened'\n *     // results[2].value = 'two'\n * });\n */\nfunction reflect(fn) {\n    return initialParams(function reflectOn(args, reflectCallback) {\n        args.push(rest(function callback(err, cbArgs) {\n            if (err) {\n                reflectCallback(null, {\n                    error: err\n                });\n            } else {\n                var value = null;\n                if (cbArgs.length === 1) {\n                    value = cbArgs[0];\n                } else if (cbArgs.length > 1) {\n                    value = cbArgs;\n                }\n                reflectCallback(null, {\n                    value: value\n                });\n            }\n        }));\n\n        return fn.apply(this, args);\n    });\n}\n\nfunction reject$1(eachfn, arr, iteratee, callback) {\n    _filter(eachfn, arr, function (value, cb) {\n        iteratee(value, function (err, v) {\n            cb(err, !v);\n        });\n    }, callback);\n}\n\n/**\n * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test.\n *\n * @name reject\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @example\n *\n * async.reject(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, results) {\n *     // results now equals an array of missing files\n *     createFiles(results);\n * });\n */\nvar reject = doParallel(reject$1);\n\n/**\n * A helper function that wraps an array or an object of functions with reflect.\n *\n * @name reflectAll\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.reflect]{@link module:Utils.reflect}\n * @category Util\n * @param {Array} tasks - The array of functions to wrap in `async.reflect`.\n * @returns {Array} Returns an array of functions, each function wrapped in\n * `async.reflect`\n * @example\n *\n * let tasks = [\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         // do some more stuff but error ...\n *         callback(new Error('bad stuff happened'));\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ];\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = Error('bad stuff happened')\n *     // results[2].value = 'two'\n * });\n *\n * // an example using an object instead of an array\n * let tasks = {\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         callback('two');\n *     },\n *     three: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'three');\n *         }, 100);\n *     }\n * };\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results.one.value = 'one'\n *     // results.two.error = 'two'\n *     // results.three.value = 'three'\n * });\n */\nfunction reflectAll(tasks) {\n    var results;\n    if (isArray(tasks)) {\n        results = arrayMap(tasks, reflect);\n    } else {\n        results = {};\n        baseForOwn(tasks, function (task, key) {\n            results[key] = reflect.call(this, task);\n        });\n    }\n    return results;\n}\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name rejectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar rejectLimit = doParallelLimit(reject$1);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time.\n *\n * @name rejectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar rejectSeries = doLimit(rejectLimit, 1);\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant$1(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * Attempts to get a successful response from `task` no more than `times` times\n * before returning an error. If the task is successful, the `callback` will be\n * passed the result of the successful task. If all attempts fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name retry\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an\n * object with `times` and `interval` or a number.\n * * `times` - The number of attempts to make before giving up.  The default\n *   is `5`.\n * * `interval` - The time to wait between retries, in milliseconds.  The\n *   default is `0`. The interval may also be specified as a function of the\n *   retry count (see example).\n * * `errorFilter` - An optional synchronous function that is invoked on\n *   erroneous result. If it returns `true` the retry attempts will continue;\n *   if the function returns `false` the retry flow is aborted with the current\n *   attempt's error and result being returned to the final callback.\n *   Invoked with (err).\n * * If `opts` is a number, the number specifies the number of times to retry,\n *   with the default interval of `0`.\n * @param {Function} task - A function which receives two arguments: (1) a\n * `callback(err, result)` which must be called when finished, passing `err`\n * (which can be `null`) and the `result` of the function's execution, and (2)\n * a `results` object, containing the results of the previously executed\n * functions (if nested inside another control flow). Invoked with\n * (callback, results).\n * @param {Function} [callback] - An optional callback which is called when the\n * task has succeeded, or after the final failed attempt. It receives the `err`\n * and `result` arguments of the last attempt at completing the `task`. Invoked\n * with (err, results).\n * @example\n *\n * // The `retry` function can be used as a stand-alone control flow by passing\n * // a callback, as shown below:\n *\n * // try calling apiMethod 3 times\n * async.retry(3, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 3 times, waiting 200 ms between each retry\n * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 10 times with exponential backoff\n * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)\n * async.retry({\n *   times: 10,\n *   interval: function(retryCount) {\n *     return 50 * Math.pow(2, retryCount);\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod the default 5 times no delay between each retry\n * async.retry(apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod only when error condition satisfies, all other\n * // errors will abort the retry control flow and return to final callback\n * async.retry({\n *   errorFilter: function(err) {\n *     return err.message === 'Temporary error'; // only retry on a specific error\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // It can also be embedded within other control flow functions to retry\n * // individual methods that are not as reliable, like this:\n * async.auto({\n *     users: api.getUsers.bind(api),\n *     payments: async.retry(3, api.getPayments.bind(api))\n * }, function(err, results) {\n *     // do something with the results\n * });\n *\n */\nfunction retry(opts, task, callback) {\n    var DEFAULT_TIMES = 5;\n    var DEFAULT_INTERVAL = 0;\n\n    var options = {\n        times: DEFAULT_TIMES,\n        intervalFunc: constant$1(DEFAULT_INTERVAL)\n    };\n\n    function parseTimes(acc, t) {\n        if (typeof t === 'object') {\n            acc.times = +t.times || DEFAULT_TIMES;\n\n            acc.intervalFunc = typeof t.interval === 'function' ? t.interval : constant$1(+t.interval || DEFAULT_INTERVAL);\n\n            acc.errorFilter = t.errorFilter;\n        } else if (typeof t === 'number' || typeof t === 'string') {\n            acc.times = +t || DEFAULT_TIMES;\n        } else {\n            throw new Error(\"Invalid arguments for async.retry\");\n        }\n    }\n\n    if (arguments.length < 3 && typeof opts === 'function') {\n        callback = task || noop;\n        task = opts;\n    } else {\n        parseTimes(options, opts);\n        callback = callback || noop;\n    }\n\n    if (typeof task !== 'function') {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n\n    var attempt = 1;\n    function retryAttempt() {\n        task(function (err) {\n            if (err && attempt++ < options.times && (typeof options.errorFilter != 'function' || options.errorFilter(err))) {\n                setTimeout(retryAttempt, options.intervalFunc(attempt));\n            } else {\n                callback.apply(null, arguments);\n            }\n        });\n    }\n\n    retryAttempt();\n}\n\n/**\n * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method wraps a task and makes it\n * retryable, rather than immediately calling it with retries.\n *\n * @name retryable\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.retry]{@link module:ControlFlow.retry}\n * @category Control Flow\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional\n * options, exactly the same as from `retry`\n * @param {Function} task - the asynchronous function to wrap\n * @returns {Functions} The wrapped function, which when invoked, will retry on\n * an error, based on the parameters specified in `opts`.\n * @example\n *\n * async.auto({\n *     dep1: async.retryable(3, getFromFlakyService),\n *     process: [\"dep1\", async.retryable(3, function (results, cb) {\n *         maybeProcessData(results.dep1, cb);\n *     })]\n * }, callback);\n */\nvar retryable = function (opts, task) {\n    if (!task) {\n        task = opts;\n        opts = null;\n    }\n    return initialParams(function (args, callback) {\n        function taskFn(cb) {\n            task.apply(null, args.concat([cb]));\n        }\n\n        if (opts) retry(opts, taskFn, callback);else retry(taskFn, callback);\n    });\n};\n\n/**\n * Run the functions in the `tasks` collection in series, each one running once\n * the previous function has completed. If any functions in the series pass an\n * error to its callback, no more functions are run, and `callback` is\n * immediately called with the value of the error. Otherwise, `callback`\n * receives an array of results when `tasks` have completed.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function, and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n *  results from {@link async.series}.\n *\n * **Note** that while many implementations preserve the order of object\n * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\n * explicitly states that\n *\n * > The mechanics and order of enumerating the properties is not specified.\n *\n * So if you rely on the order in which your series of functions are executed,\n * and want this to work on all platforms, consider using an array.\n *\n * @name series\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection containing functions to run, each\n * function is passed a `callback(err, result)` it must call on completion with\n * an error `err` (which can be `null`) and an optional `result` value.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This function gets a results array (or object)\n * containing all the result arguments passed to the `task` callbacks. Invoked\n * with (err, result).\n * @example\n * async.series([\n *     function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     },\n *     function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // results is now equal to ['one', 'two']\n * });\n *\n * async.series({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback){\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equal to: {one: 1, two: 2}\n * });\n */\nfunction series(tasks, callback) {\n  _parallel(eachOfSeries, tasks, callback);\n}\n\n/**\n * Returns `true` if at least one element in the `coll` satisfies an async test.\n * If any iteratee call returns `true`, the main `callback` is immediately\n * called.\n *\n * @name some\n * @static\n * @memberOf module:Collections\n * @method\n * @alias any\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in the array\n * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n * be called with a boolean argument once it has completed. Invoked with\n * (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @example\n *\n * async.some(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then at least one of the files exists\n * });\n */\nvar some = _createTester(eachOf, Boolean, identity);\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time.\n *\n * @name someLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anyLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in the array\n * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n * be called with a boolean argument once it has completed. Invoked with\n * (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n */\nvar someLimit = _createTester(eachOfLimit, Boolean, identity);\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.\n *\n * @name someSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anySeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in the array\n * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n * be called with a boolean argument once it has completed. Invoked with\n * (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n */\nvar someSeries = doLimit(someLimit, 1);\n\n/**\n * Sorts a list by the results of running each `coll` value through an async\n * `iteratee`.\n *\n * @name sortBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A function to apply to each item in `coll`.\n * The iteratee is passed a `callback(err, sortValue)` which must be called once\n * it has completed with an error (which can be `null`) and a value to use as\n * the sort criteria. Invoked with (item, callback).\n * @param {Function} callback - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is the items\n * from the original `coll` sorted by the values returned by the `iteratee`\n * calls. Invoked with (err, results).\n * @example\n *\n * async.sortBy(['file1','file2','file3'], function(file, callback) {\n *     fs.stat(file, function(err, stats) {\n *         callback(err, stats.mtime);\n *     });\n * }, function(err, results) {\n *     // results is now the original array of files sorted by\n *     // modified date\n * });\n *\n * // By modifying the callback parameter the\n * // sorting order can be influenced:\n *\n * // ascending order\n * async.sortBy([1,9,3,5], function(x, callback) {\n *     callback(null, x);\n * }, function(err,result) {\n *     // result callback\n * });\n *\n * // descending order\n * async.sortBy([1,9,3,5], function(x, callback) {\n *     callback(null, x*-1);    //<- x*-1 instead of x, turns the order around\n * }, function(err,result) {\n *     // result callback\n * });\n */\nfunction sortBy(coll, iteratee, callback) {\n    map(coll, function (x, callback) {\n        iteratee(x, function (err, criteria) {\n            if (err) return callback(err);\n            callback(null, { value: x, criteria: criteria });\n        });\n    }, function (err, results) {\n        if (err) return callback(err);\n        callback(null, arrayMap(results.sort(comparator), baseProperty('value')));\n    });\n\n    function comparator(left, right) {\n        var a = left.criteria,\n            b = right.criteria;\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n}\n\n/**\n * Sets a time limit on an asynchronous function. If the function does not call\n * its callback within the specified milliseconds, it will be called with a\n * timeout error. The code property for the error object will be `'ETIMEDOUT'`.\n *\n * @name timeout\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} asyncFn - The asynchronous function you want to set the\n * time limit.\n * @param {number} milliseconds - The specified time limit.\n * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)\n * to timeout Error for more information..\n * @returns {Function} Returns a wrapped function that can be used with any of\n * the control flow functions. Invoke this function with the same\n * parameters as you would `asyncFunc`.\n * @example\n *\n * function myFunction(foo, callback) {\n *     doAsyncTask(foo, function(err, data) {\n *         // handle errors\n *         if (err) return callback(err);\n *\n *         // do some stuff ...\n *\n *         // return processed data\n *         return callback(null, data);\n *     });\n * }\n *\n * var wrapped = async.timeout(myFunction, 1000);\n *\n * // call `wrapped` as you would `myFunction`\n * wrapped({ bar: 'bar' }, function(err, data) {\n *     // if `myFunction` takes < 1000 ms to execute, `err`\n *     // and `data` will have their expected values\n *\n *     // else `err` will be an Error with the code 'ETIMEDOUT'\n * });\n */\nfunction timeout(asyncFn, milliseconds, info) {\n    var originalCallback, timer;\n    var timedOut = false;\n\n    function injectedCallback() {\n        if (!timedOut) {\n            originalCallback.apply(null, arguments);\n            clearTimeout(timer);\n        }\n    }\n\n    function timeoutCallback() {\n        var name = asyncFn.name || 'anonymous';\n        var error = new Error('Callback function \"' + name + '\" timed out.');\n        error.code = 'ETIMEDOUT';\n        if (info) {\n            error.info = info;\n        }\n        timedOut = true;\n        originalCallback(error);\n    }\n\n    return initialParams(function (args, origCallback) {\n        originalCallback = origCallback;\n        // setup timer and call original function\n        timer = setTimeout(timeoutCallback, milliseconds);\n        asyncFn.apply(null, args.concat(injectedCallback));\n    });\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil;\nvar nativeMax$1 = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax$1(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name timesLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} count - The number of times to run the function.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - The function to call `n` times. Invoked with the\n * iteration index and a callback (n, next).\n * @param {Function} callback - see [async.map]{@link module:Collections.map}.\n */\nfunction timeLimit(count, limit, iteratee, callback) {\n  mapLimit(baseRange(0, count, 1), limit, iteratee, callback);\n}\n\n/**\n * Calls the `iteratee` function `n` times, and accumulates results in the same\n * manner you would use with [map]{@link module:Collections.map}.\n *\n * @name times\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {Function} iteratee - The function to call `n` times. Invoked with the\n * iteration index and a callback (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n * @example\n *\n * // Pretend this is some complicated async factory\n * var createUser = function(id, callback) {\n *     callback(null, {\n *         id: 'user' + id\n *     });\n * };\n *\n * // generate 5 users\n * async.times(5, function(n, next) {\n *     createUser(n, function(err, user) {\n *         next(err, user);\n *     });\n * }, function(err, users) {\n *     // we should now have 5 users\n * });\n */\nvar times = doLimit(timeLimit, Infinity);\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time.\n *\n * @name timesSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {Function} iteratee - The function to call `n` times. Invoked with the\n * iteration index and a callback (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n */\nvar timesSeries = doLimit(timeLimit, 1);\n\n/**\n * A relative of `reduce`.  Takes an Object or Array, and iterates over each\n * element in series, each step potentially mutating an `accumulator` value.\n * The type of the accumulator defaults to the type of collection passed in.\n *\n * @name transform\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {*} [accumulator] - The initial state of the transform.  If omitted,\n * it will default to an empty Object or Array, depending on the type of `coll`\n * @param {Function} iteratee - A function applied to each item in the\n * collection that potentially modifies the accumulator. The `iteratee` is\n * passed a `callback(err)` which accepts an optional error as its first\n * argument. If an error is passed to the callback, the transform is stopped\n * and the main `callback` is immediately called with the error.\n * Invoked with (accumulator, item, key, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the transformed accumulator.\n * Invoked with (err, result).\n * @example\n *\n * async.transform([1,2,3], function(acc, item, index, callback) {\n *     // pointless async:\n *     process.nextTick(function() {\n *         acc.push(item * 2)\n *         callback(null)\n *     });\n * }, function(err, result) {\n *     // result is now equal to [2, 4, 6]\n * });\n *\n * @example\n *\n * async.transform({a: 1, b: 2, c: 3}, function (obj, val, key, callback) {\n *     setImmediate(function () {\n *         obj[key] = val * 2;\n *         callback();\n *     })\n * }, function (err, result) {\n *     // result is equal to {a: 2, b: 4, c: 6}\n * })\n */\nfunction transform(coll, accumulator, iteratee, callback) {\n    if (arguments.length === 3) {\n        callback = iteratee;\n        iteratee = accumulator;\n        accumulator = isArray(coll) ? [] : {};\n    }\n    callback = once(callback || noop);\n\n    eachOf(coll, function (v, k, cb) {\n        iteratee(accumulator, v, k, cb);\n    }, function (err) {\n        callback(err, accumulator);\n    });\n}\n\n/**\n * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,\n * unmemoized form. Handy for testing.\n *\n * @name unmemoize\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.memoize]{@link module:Utils.memoize}\n * @category Util\n * @param {Function} fn - the memoized function\n * @returns {Function} a function that calls the original unmemoized function\n */\nfunction unmemoize(fn) {\n    return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n    };\n}\n\n/**\n * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs.\n *\n * @name whilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Function} test - synchronous truth test to perform before each\n * execution of `iteratee`. Invoked with ().\n * @param {Function} iteratee - A function which is called each time `test` passes.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns undefined\n * @example\n *\n * var count = 0;\n * async.whilst(\n *     function() { return count < 5; },\n *     function(callback) {\n *         count++;\n *         setTimeout(function() {\n *             callback(null, count);\n *         }, 1000);\n *     },\n *     function (err, n) {\n *         // 5 seconds have passed, n = 5\n *     }\n * );\n */\nfunction whilst(test, iteratee, callback) {\n    callback = onlyOnce(callback || noop);\n    if (!test()) return callback(null);\n    var next = rest(function (err, args) {\n        if (err) return callback(err);\n        if (test()) return iteratee(next);\n        callback.apply(null, [null].concat(args));\n    });\n    iteratee(next);\n}\n\n/**\n * Repeatedly call `fn` until `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs. `callback` will be passed an error and any\n * arguments passed to the final `fn`'s callback.\n *\n * The inverse of [whilst]{@link module:ControlFlow.whilst}.\n *\n * @name until\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {Function} test - synchronous truth test to perform before each\n * execution of `fn`. Invoked with ().\n * @param {Function} fn - A function which is called each time `test` fails.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `fn`'s\n * callback. Invoked with (err, [results]);\n */\nfunction until(test, fn, callback) {\n    whilst(function () {\n        return !test.apply(this, arguments);\n    }, fn, callback);\n}\n\n/**\n * Runs the `tasks` array of functions in series, each passing their results to\n * the next in the array. However, if any of the `tasks` pass an error to their\n * own callback, the next function is not executed, and the main `callback` is\n * immediately called with the error.\n *\n * @name waterfall\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array of functions to run, each function is passed\n * a `callback(err, result1, result2, ...)` it must call on completion. The\n * first argument is an error (which can be `null`) and any further arguments\n * will be passed as arguments in order to the next task.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This will be passed the results of the last task's\n * callback. Invoked with (err, [results]).\n * @returns undefined\n * @example\n *\n * async.waterfall([\n *     function(callback) {\n *         callback(null, 'one', 'two');\n *     },\n *     function(arg1, arg2, callback) {\n *         // arg1 now equals 'one' and arg2 now equals 'two'\n *         callback(null, 'three');\n *     },\n *     function(arg1, callback) {\n *         // arg1 now equals 'three'\n *         callback(null, 'done');\n *     }\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n *\n * // Or, with named functions:\n * async.waterfall([\n *     myFirstFunction,\n *     mySecondFunction,\n *     myLastFunction,\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n * function myFirstFunction(callback) {\n *     callback(null, 'one', 'two');\n * }\n * function mySecondFunction(arg1, arg2, callback) {\n *     // arg1 now equals 'one' and arg2 now equals 'two'\n *     callback(null, 'three');\n * }\n * function myLastFunction(arg1, callback) {\n *     // arg1 now equals 'three'\n *     callback(null, 'done');\n * }\n */\nvar waterfall = function (tasks, callback) {\n    callback = once(callback || noop);\n    if (!isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return callback();\n    var taskIndex = 0;\n\n    function nextTask(args) {\n        if (taskIndex === tasks.length) {\n            return callback.apply(null, [null].concat(args));\n        }\n\n        var taskCallback = onlyOnce(rest(function (err, args) {\n            if (err) {\n                return callback.apply(null, [err].concat(args));\n            }\n            nextTask(args);\n        }));\n\n        args.push(taskCallback);\n\n        var task = tasks[taskIndex++];\n        task.apply(null, args);\n    }\n\n    nextTask([]);\n};\n\n/**\n * Async is a utility module which provides straight-forward, powerful functions\n * for working with asynchronous JavaScript. Although originally designed for\n * use with [Node.js](http://nodejs.org) and installable via\n * `npm install --save async`, it can also be used directly in the browser.\n * @module async\n */\n\n/**\n * A collection of `async` functions for manipulating collections, such as\n * arrays and objects.\n * @module Collections\n */\n\n/**\n * A collection of `async` functions for controlling the flow through a script.\n * @module ControlFlow\n */\n\n/**\n * A collection of `async` utility functions.\n * @module Utils\n */\nvar index = {\n  applyEach: applyEach,\n  applyEachSeries: applyEachSeries,\n  apply: apply$2,\n  asyncify: asyncify,\n  auto: auto,\n  autoInject: autoInject,\n  cargo: cargo,\n  compose: compose,\n  concat: concat,\n  concatSeries: concatSeries,\n  constant: constant,\n  detect: detect,\n  detectLimit: detectLimit,\n  detectSeries: detectSeries,\n  dir: dir,\n  doDuring: doDuring,\n  doUntil: doUntil,\n  doWhilst: doWhilst,\n  during: during,\n  each: eachLimit,\n  eachLimit: eachLimit$1,\n  eachOf: eachOf,\n  eachOfLimit: eachOfLimit,\n  eachOfSeries: eachOfSeries,\n  eachSeries: eachSeries,\n  ensureAsync: ensureAsync,\n  every: every,\n  everyLimit: everyLimit,\n  everySeries: everySeries,\n  filter: filter,\n  filterLimit: filterLimit,\n  filterSeries: filterSeries,\n  forever: forever,\n  log: log,\n  map: map,\n  mapLimit: mapLimit,\n  mapSeries: mapSeries,\n  mapValues: mapValues,\n  mapValuesLimit: mapValuesLimit,\n  mapValuesSeries: mapValuesSeries,\n  memoize: memoize,\n  nextTick: nextTick,\n  parallel: parallelLimit,\n  parallelLimit: parallelLimit$1,\n  priorityQueue: priorityQueue,\n  queue: queue$1,\n  race: race,\n  reduce: reduce,\n  reduceRight: reduceRight,\n  reflect: reflect,\n  reflectAll: reflectAll,\n  reject: reject,\n  rejectLimit: rejectLimit,\n  rejectSeries: rejectSeries,\n  retry: retry,\n  retryable: retryable,\n  seq: seq$1,\n  series: series,\n  setImmediate: setImmediate$1,\n  some: some,\n  someLimit: someLimit,\n  someSeries: someSeries,\n  sortBy: sortBy,\n  timeout: timeout,\n  times: times,\n  timesLimit: timeLimit,\n  timesSeries: timesSeries,\n  transform: transform,\n  unmemoize: unmemoize,\n  until: until,\n  waterfall: waterfall,\n  whilst: whilst,\n\n  // aliases\n  all: every,\n  any: some,\n  forEach: eachLimit,\n  forEachSeries: eachSeries,\n  forEachLimit: eachLimit$1,\n  forEachOf: eachOf,\n  forEachOfSeries: eachOfSeries,\n  forEachOfLimit: eachOfLimit,\n  inject: reduce,\n  foldl: reduce,\n  foldr: reduceRight,\n  select: filter,\n  selectLimit: filterLimit,\n  selectSeries: filterSeries,\n  wrapSync: asyncify\n};\n\nexports['default'] = index;\nexports.applyEach = applyEach;\nexports.applyEachSeries = applyEachSeries;\nexports.apply = apply$2;\nexports.asyncify = asyncify;\nexports.auto = auto;\nexports.autoInject = autoInject;\nexports.cargo = cargo;\nexports.compose = compose;\nexports.concat = concat;\nexports.concatSeries = concatSeries;\nexports.constant = constant;\nexports.detect = detect;\nexports.detectLimit = detectLimit;\nexports.detectSeries = detectSeries;\nexports.dir = dir;\nexports.doDuring = doDuring;\nexports.doUntil = doUntil;\nexports.doWhilst = doWhilst;\nexports.during = during;\nexports.each = eachLimit;\nexports.eachLimit = eachLimit$1;\nexports.eachOf = eachOf;\nexports.eachOfLimit = eachOfLimit;\nexports.eachOfSeries = eachOfSeries;\nexports.eachSeries = eachSeries;\nexports.ensureAsync = ensureAsync;\nexports.every = every;\nexports.everyLimit = everyLimit;\nexports.everySeries = everySeries;\nexports.filter = filter;\nexports.filterLimit = filterLimit;\nexports.filterSeries = filterSeries;\nexports.forever = forever;\nexports.log = log;\nexports.map = map;\nexports.mapLimit = mapLimit;\nexports.mapSeries = mapSeries;\nexports.mapValues = mapValues;\nexports.mapValuesLimit = mapValuesLimit;\nexports.mapValuesSeries = mapValuesSeries;\nexports.memoize = memoize;\nexports.nextTick = nextTick;\nexports.parallel = parallelLimit;\nexports.parallelLimit = parallelLimit$1;\nexports.priorityQueue = priorityQueue;\nexports.queue = queue$1;\nexports.race = race;\nexports.reduce = reduce;\nexports.reduceRight = reduceRight;\nexports.reflect = reflect;\nexports.reflectAll = reflectAll;\nexports.reject = reject;\nexports.rejectLimit = rejectLimit;\nexports.rejectSeries = rejectSeries;\nexports.retry = retry;\nexports.retryable = retryable;\nexports.seq = seq$1;\nexports.series = series;\nexports.setImmediate = setImmediate$1;\nexports.some = some;\nexports.someLimit = someLimit;\nexports.someSeries = someSeries;\nexports.sortBy = sortBy;\nexports.timeout = timeout;\nexports.times = times;\nexports.timesLimit = timeLimit;\nexports.timesSeries = timesSeries;\nexports.transform = transform;\nexports.unmemoize = unmemoize;\nexports.until = until;\nexports.waterfall = waterfall;\nexports.whilst = whilst;\nexports.all = every;\nexports.allLimit = everyLimit;\nexports.allSeries = everySeries;\nexports.any = some;\nexports.anyLimit = someLimit;\nexports.anySeries = someSeries;\nexports.find = detect;\nexports.findLimit = detectLimit;\nexports.findSeries = detectSeries;\nexports.forEach = eachLimit;\nexports.forEachSeries = eachSeries;\nexports.forEachLimit = eachLimit$1;\nexports.forEachOf = eachOf;\nexports.forEachOfSeries = eachOfSeries;\nexports.forEachOfLimit = eachOfLimit;\nexports.inject = reduce;\nexports.foldl = reduce;\nexports.foldr = reduceRight;\nexports.select = filter;\nexports.selectLimit = filterLimit;\nexports.selectSeries = filterSeries;\nexports.wrapSync = asyncify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","/**\n * @module M/impl/control/QueryDatabaseControl\n */\nexport default class QueryDatabaseControl extends M.impl.Control {\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {HTMLElement} html of the plugin\n   * @api stable\n   */\n  addTo(map, html) {\n    super.addTo(map, html);\n    this.facadeMap = map;\n    /**\n     * OL vector source for draw interactions.\n     * @private\n     * @type {*} - OpenLayers vector source\n     */\n    this.vectorSource = undefined;\n  }\n\n  setSource() {\n    this.vectorSource = this.newVectorSource(false);\n  }\n\n\n  /**\n     * Creates new OpenLayers vector source\n     * @public\n     * @function\n     * @api\n     * @param {Boolean} featuresIncluded - indicates if an OL collection of\n     * features should be included in new source\n     */\n  newVectorSource(featuresIncluded) {\n    return featuresIncluded ?\n      new ol.source.Vector({ features: new ol.Collection([]) }) :\n      new ol.source.Vector();\n  }\n\n  getPolygonFromExtent(extent) {\n    const geom = ol.geom.Polygon.fromExtent(extent);\n    const feature = new M.Feature('featurebbox.1', {\n      geometry: {\n        coordinates: geom.getCoordinates(),\n        type: geom.getType(),\n      },\n      properties: [],\n    });\n\n    return feature;\n  }\n\n  getLayerExtent(layer) {\n    return layer.getImpl().getOL3Layer().getSource().getExtent();\n  }\n\n  getGeomExtent(geom, coordinates) {\n    let ext = null;\n    if (geom === 'multipoint') {\n      ext = new ol.geom.MultiPoint(coordinates).getExtent();\n    } else if (geom === 'point') {\n      ext = new ol.geom.Point(coordinates).getExtent();\n    } else if (geom === 'multipolygon') {\n      ext = new ol.geom.MultiPolygon(coordinates).getExtent();\n    } else if (geom === 'polygon') {\n      ext = new ol.geom.Polygon(coordinates).getExtent();\n    } else if (geom === 'multilinestring') {\n      ext = new ol.geom.MultiLineString(coordinates).getExtent();\n    } else if (geom === 'linestring') {\n      ext = new ol.geom.LineString(coordinates).getExtent();\n    }\n\n    return ext;\n  }\n\n  /**\n   * Transforms x,y coordinates to 4326 on coordinates array.\n   * @public\n   * @function\n   * @api\n   * @param {String} codeProjection\n   * @param {Array<Number>} oldCoordinates\n   */\n  getTransformedCoordinates(codeProjection, oldCoordinates) {\n    const transformFunction = ol.proj.getTransform(codeProjection, 'EPSG:4326');\n    return this.getFullCoordinates(\n      oldCoordinates,\n      transformFunction(this.getXY(oldCoordinates)),\n    );\n  }\n\n  /**\n   * Given a coordinate set (x, y, altitude?), returns [x,y].\n   * @public\n   * @function\n   * @api\n   * @param {Array<Number>} coordinatesSet\n   */\n  getXY(coordinatesSet) {\n    const coordinateCopy = [];\n    for (let i = 0; i < coordinatesSet.length; i += 1) coordinateCopy.push(coordinatesSet[i]);\n    while (coordinateCopy.length > 2) coordinateCopy.pop();\n    return coordinateCopy;\n  }\n\n  /**\n   * Substitutes x, y coordinates on coordinate set (x, y, altitude...)\n   * @public\n   * @function\n   * @api\n   * @param {Array} oldCoordinates\n   * @param {Array<Number>} newXY - [x,y]\n   */\n  getFullCoordinates(oldCoordinates, newXY) {\n    const newCoordinates = oldCoordinates;\n    newCoordinates[0] = newXY[0];\n    newCoordinates[1] = newXY[1];\n    return newCoordinates;\n  }\n}\n","import en from './en';\nimport es from './es';\n\n/**\n * Default object with es and en translate.\n *\n * @const\n * @type {object}\n */\nconst translations = {\n  en,\n  es,\n};\n\nconst getLang = () => {\n  let res = 'es';\n  if (typeof M.language.getLang === 'function') {\n    res = M.language.getLang();\n  }\n\n  return res;\n};\n\n/**\n * This function sets a new language translate.\n * @param {string} lang\n * @param {JSON} json\n * @public\n * @api\n */\nexport const addTranslation = (lang, json) => {\n  translations[lang] = json;\n};\n\n/**\n * This function gets a language translate.\n *\n * @param {string} lang\n * @return {JSON}\n * @public\n * @api\n */\nexport const getTranslation = (lang) => {\n  return translations[lang];\n};\n\n/**\n * This function gets a language value from key\n *\n * @public\n * @param {string}\n * @param {string}\n * @return {string}\n * @public\n * @api\n */\n\nexport const getValue = (keyPath, lang = getLang()) => {\n  const translation = getTranslation(lang);\n  let value = '';\n  if (M.utils.isNullOrEmpty(translation)) {\n    /* eslint-disable no-console */\n    console.warn(`The translation '${lang}' has not been defined.`);\n  } else {\n    value = keyPath.split('.').reduce((prev, current) => prev[current], translation);\n  }\n\n  return value;\n};\n","/**\n * @module M/control/QueryDatabaseControl\n */\n\n import QueryDatabaseImplControl from 'impl/querydatabasecontrol';\n import template from 'templates/querydatabase';\n import initialView from 'templates/initialview';\n import tabledata from 'templates/tabledata';\n import tablefilter from 'templates/tablefilter';\n import tabledatabases from 'templates/tabledatabases';\n import tabledatatables from 'templates/tabledatatables';\n import tableAttributes from 'templates/tableAttributes';\n import { getValue } from './i18n/language';\n import { concat } from 'async';\n \n export default class QueryDatabaseControl extends M.Control {\n   /**\n    * @classdesc\n    * Main constructor of the class. Creates a PluginControl\n    * control\n    *\n    * @constructor\n    * @extends {M.Control}\n    * @api stable\n    */\n \n   constructor(collapsed_, position_, connection_, styles_) {\n     if (M.utils.isUndefined(QueryDatabaseImplControl)) {\n       M.exception(getValue('exception.impl'));\n     }\n \n     const impl = new QueryDatabaseImplControl();\n     super(impl, 'QueryDatabase');\n  \n     this.filtered = false;\n \n     this.bboxfilter = false;\n \n     this.collapsed = collapsed_;\n \n     this.position = position_;\n\n     this.connection = connection_;\n\n     this.styles = styles_;\n\n     this.token = this.getTokenByConnection();\n\n     this.atributos = this.connection ? this.getArrayFormated(this.connection.attributes) : [];\n\n     this.filters = this.connection ? this.getArrayFormated(this.connection.filters) : [];\n \n     this.databaseLayer = new M.layer.Vector({\n       extract: true,\n       name: 'databaseLayer',\n       source: this.getImpl().newVectorSource(false),\n     });\n\n     this.paginaActual = 1;\n\n     this.moveEvents = [];\n\n     this.elementos = [];\n\n     this.cluster = false;\n   }\n \n   /**\n    * This function creates the view\n    *\n    * @public\n    * @function\n    * @param {M.Map} map to add the control\n    * @api stable\n    */\n   createView(map) {\n     this.map = map;\n     return new Promise((success, fail) => {\n       this.createInitialView(map);\n       this.map.addLayers(this.databaseLayer); \n       success(this.html);\n     });\n   }\n\n   createInitialTemplate(){\n    const html = M.template.compileSync(template, {\n      vars: {\n        translations: {\n          attribute_table: getValue('attribute_table'),\n          clean_filters: getValue('clean_filters'),\n          export: getValue('export'),\n        },\n      },\n    });\n\n    html.querySelector('#m-querydatabase-options-container').appendChild(this.initialView);\n    this.html = html;\n   }\n\n   launchComun(html){\n    this.html.querySelector('#m-querydatabase-table').innerHTML = '';\n    this.html.querySelector('#m-querydatabase-options-information-container').innerHTML = ''; // e2m:borro contenido para evitar que concatene dentro ventanas de información\n    this.html.querySelector('#m-querydatabase-options-information-container').appendChild(html);\n   }\n \n   /**\n    * e2m:\n    * Abre el sidepanel por código, al hacer clic sobre uno de los features de la capa vectorial\n    * @param {*} html\n    */\n   launchDatabasesWindow(html) {\n      this.launchComun(html);\n      document.querySelector('#databases').addEventListener('click', (evt) => {\n        if(evt.target.getAttribute('class') === 'showtables'){\n          this.database = evt.target.getAttribute('id');\n          this.paginaActual = 1;\n          this.getTablasDisponibles();\n        }\n     });\n   }\n\n   launchInicial(){\n    if(this.connection.table){\n      this.tabla = this.connection.table;\n      if(this.connection.schema){\n        this.schema = this.connection.schema;\n      }else{\n        this.schema = 'public';\n      }\n      this.removeMapMoveEvents();\n      this.drawTable(null);\n      this.createFilterView();\n      this.addMapMoveEvent(this.filtrarDatos.bind(this));\n    }else{\n      this.getTablasDisponibles();\n    }\n   }\n\n   launchTablesWindow(html) {\n      this.launchComun(html);\n      this.removeMapMoveEvents();\n      document.querySelector('#tables').addEventListener('click', (evt) => {\n        if(evt.target.getAttribute('class') === 'filter'){\n          const id = evt.target.parentNode.parentNode.getAttribute('id');\n          const data = id.split('&');\n          this.schema = data[0];\n          this.tabla = data[1];\n          this.paginaActual = 1;\n          this.getColumnasTablas();\n        }else if(evt.target.getAttribute('class') === 'drawtable'){\n          const id = evt.target.parentNode.parentNode.getAttribute('id');\n          const data = id.split('&');\n          this.schema = data[0];\n          this.tabla = data[1];\n          this.drawTable(null);\n          this.createFilterView();\n          this.addMapMoveEvent(this.filtrarDatos.bind(this));\n        }\n     });\n     this.addAtrasEvent(this.getBasesDatosDisponibles.bind(this));\n    }\n\n    launchAttributesWindow(html) {\n      this.launchComun(html);\n      this.addAtrasEvent(this.getTablasDisponibles.bind(this));\n    }\n\n    launchDataTable(html){\n      this.launchComun(html);\n      this.addAtrasEvent(this.getTablasDisponibles.bind(this));\n    }\n\n    addAtrasEvent(callback){\n      document.querySelector('#atras').addEventListener('click', callback);\n    }\n\n    addPaginationEvent(callback){\n      document.querySelector('#m-paginacion').addEventListener('click', (evt) => {\n        if(evt.target.getAttribute('class').includes('m-grid-item')){\n          if(evt.target.getAttribute('id') === 'primero'){\n            this.paginaActual = 1;\n          }else if(evt.target.getAttribute('id') === 'anterior' && this.paginaActual - 1 > 0){\n            this.paginaActual--;\n          }else if(evt.target.getAttribute('id') === 'siguiente' && this.paginaActual + 1 >= this.paginasTotales){\n            this.paginaActual++;\n          }else if(evt.target.getAttribute('id') === 'ultimo'){\n            this.paginaActual = this.paginasTotales;\n          }else if(evt.target.getAttribute('class').includes('pag-disponible')){\n            this.paginaActual = Number.parseInt(evt.target.getAttribute('id'));\n          }else{\n            return;\n          }\n          callback();\n        }\n      });\n    }\n \n   /**\n    * Creates initialview.html template dinamically.\n    * @public\n    * @function\n    * @api\n    * @param {Map} map\n    */\n   createInitialView(map) {\n     const options = {};\n     this.initialView = M.template.compileSync(initialView, options);\n     this.createInitialTemplate();\n     if(this.connection && this.connection.host && this.connection.port && this.connection.name\n      && this.connection.user && this.connection.password){\n      this.launchInicial();\n     }else{\n      this.getBasesDatosDisponibles();\n     }\n   }\n\n   getBasesDatosDisponibles(){\n    const url = `${M.config.MAPEA_URL}/api/database`;\n    M.remote.get(url).then((response) => {\n      const databases = JSON.parse(response.text);\n      const html = M.template.compileSync(tabledatabases, {\n        vars: {\n          databases,\n        },\n      });\n      this.launchDatabasesWindow(html);\n    });\n  }\n\n  getTablasDisponibles(){\n    let url = `${M.config.MAPEA_URL}/api/database/`;\n    url = url.concat(this.token ? this.token : this.database).concat(`/tables?size=0`);\n    if(this.token){\n      url = url.concat('&token=true');\n    }\n    M.remote.get(url).then((response) => {\n      const pagina = JSON.parse(response.text);\n      const tables = pagina.results;\n      const html = M.template.compileSync(tabledatatables, {\n        vars: {\n          tables,\n        },\n      });\n      this.launchTablesWindow(html);\n    });\n  }\n\n  getColumnasTablas(){\n    let url = `${M.config.MAPEA_URL}/api/database/`;\n    url = url.concat(this.token ? this.token : this.database)\n      .concat(`/attributes/${this.tabla}?schema=${this.schema}&size=0`);\n    if(this.token){\n      url = url.concat('&token=true');\n    }\n    M.remote.get(url).then((response) => {\n      const pagina = JSON.parse(response.text);\n      const attributes = pagina.results;\n      const html = M.template.compileSync(tableAttributes, {\n        vars: {\n          attributes,\n        },\n      });\n      this.launchAttributesWindow(html);\n    });\n  }\n\n  getDataTable(){\n    let url = `${M.config.MAPEA_URL}/api/database/`;\n    url = url.concat(this.token ? this.token : this.database)\n      .concat(`/${this.tabla}/filtered?schema=${this.schema}&size=0`);\n    if(this.token){\n      url = url.concat('&token=true');\n    }\n    M.remote.get(url).then((response) => {\n      const pagina = JSON.parse(response.text);\n      const rows = pagina.results;\n      const html = M.template.compileSync(tabledata, {\n        vars : {\n          rows,\n        }\n      });\n      this.launchDataTable(html);\n    });\n  }\n\n  drawTable(filtros){\n    this.cluster = false;\n    const geomBbox = this.buildGeomFromBbox();\n    let url = `${M.config.MAPEA_URL}/api/database/`;\n    url = url.concat(this.token ? this.token : this.database)\n      .concat(`/${this.tabla}/filtered?schema=${this.schema}`);\n    if(this.token){\n      url = url.concat('&token=true');\n    }\n    url = url.concat(`&bbox=${geomBbox}`);\n    const zoom = this.map.getZoom();\n    url = url.concat(`&zoom=${zoom}`);\n    if(filtros){\n      url = url.concat(filtros);\n    }\n    url = url.concat('&busquedaGeneral=etiqueta;tipo@mont*a');\n      M.remote.get(url).then((response) => {\n        const pagina = JSON.parse(response.text);\n        if(pagina && pagina.results){\n          this.elementos = pagina.results;\n          if(pagina.numPagina === -999){//Se devuelve cluster en vez de los datos de la tabla\n            this.cluster = true;\n          }\n          this.drawElements();\n          this.createDataView();\n        }\n      });\n  }\n\n  createDataView(){\n    this.html.querySelector('#m-querydatabase-table-container').innerHTML = '';\n    if(!this.cluster){\n      const atributos = this.getAttributes();\n      const elementos = this.getElementsWithAttributes();\n      const html = M.template.compileSync(tabledata, {\n        vars: {\n          elementos,\n          atributos,\n        },\n      });\n      html.addEventListener('click', this.interaccionTabla.bind(this));\n      this.html.querySelector('#m-querydatabase-table-container').appendChild(html);\n    }\n  }\n\n  createFilterView(){\n    const filters = this.connection && this.connection.table && this.connection.table === this.tabla ? this.filters : [];\n    const html = M.template.compileSync(tablefilter, {\n      vars: {\n        filters,\n      },\n    });\n    this.launchComun(html);\n    let btnFiltrar = html.querySelector(\"#filtrar-elementos\");\n    if(btnFiltrar){\n      btnFiltrar.addEventListener('click', this.filtrarDatos.bind(this));\n    }\n    html.querySelector('#atras').addEventListener('click', this.getTablasDisponibles.bind(this));\n    this.createDataView();\n  }\n\n  filtrarDatos(){\n    let filtros = '';\n    const inputs = document.querySelectorAll('.filter-input');\n    for(let i = 0; i < inputs.length; i++){\n      let key = inputs[i].getAttribute('id');\n      let value = inputs[i].value;\n      if(value && key){\n        value = escape(value);\n        filtros = filtros.concat(`&${key}=${value}`);\n      }\n    }\n    this.drawTable(filtros);\n }\n\n  drawElements(){\n    const features = [];\n    for(let i = 0; i < this.elementos.length; i++){\n      if(this.elementos[i].geometry){\n        let feature = this.getFeatureFromElement(this.elementos[i]);\n        features.push(feature);\n        this.elementos[i].featureId = feature.getId();\n      }\n    }\n    this.databaseLayer.removeFeatures(this.databaseLayer.getFeatures());\n    this.databaseLayer.setStyle(null);\n    if(features.length > 0){\n      this.selectStyleLayer(features[0].getGeometry().type);\n    }\n    this.databaseLayer.addFeatures(features);\n  }\n\n  getFeatureFromElement(element){\n    let format = new ol.format.WKT();\n    let olGeom = format.readGeometryFromText(element.geometry)\n      .transform(`EPSG:${element.srid}`, this.map_.getProjection().code);\n    let feature = new M.Feature();\n    let mGeom = {type: olGeom.getType(), coordinates: olGeom.getCoordinates()};\n    feature.setGeometry(mGeom);\n    delete element.geometry;\n    delete element.srid;\n    feature.setAttributes(element);\n    if(this.cluster){\n      feature.setStyle(this.getClusterStyle(element.elementos_cluster));\n    }\n    return feature;\n  }\n\n  selectStyleLayer(geomType){\n    const style = this.getStyleByGeomType(geomType);\n    this.databaseLayer.setStyle(style);\n  }\n\n  getStyleByGeomType(geomType){\n    let style = null;\n    if(geomType && this.styles && this.styles.default){\n      if(geomType.includes('Point') && this.styles.default.point){\n        style = this.styles.default.point;\n      }else if(geomType.includes('LineString') && this.styles.default.line){\n        style = this.styles.default.line;\n      }else if(geomType.includes('Polygon') && this.styles.default.polygon){\n        style = this.styles.default.polygon;\n      }\n    }\n    return style;\n  }\n\n  getClusterStyle(numElementos){\n    let style = this.getStyleByGeomType('Polygon').clone();\n    if(!style){\n      style = new M.style.Polygon({\n        fill: {\n          color: 'blue',\n          opacity: 0.5\n        },\n        stroke: {\n          color: blue\n        }\n      });\n    }\n    style.getOptions().label = {\n      text: numElementos,\n      align: M.style.align.CENTER,\n      baseline: M.style.baseline.MIDDLE\n    };\n    return style;\n  }\n\n  getClusterStyle2(numElementos){\n    let style = this.getStyleByGeomType('Point').clone();\n    if(!style){\n      style = new M.style.Point({\n        fill: {\n          color: 'blue',\n          opacity: 0.5\n        },\n        stroke: {\n          color: blue\n        }\n      });\n    }\n    style.getOptions().label = {\n      text: numElementos,\n      align: M.style.align.CENTER,\n      baseline: M.style.baseline.MIDDLE\n    };\n    style.getOptions().icon = {\n      form: M.style.form.MARKER,\n      fontsize: 0.5,\n      color: 'red',\n      fill: 'red'\n    };\n    return style;\n  }\n \n   /**\n    * Check if the layer is not added yet.\n    * @public\n    * @function\n    * @param { String } name of layer to add.\n    * @api stable\n    */\n   isNotAdded(layerName, htmlSelect) {\n     const aChildren = [...htmlSelect.children];\n     return !aChildren.some(o => o.innerHTML === layerName);\n   }\n \n   /**\n    * This function compares controls\n    *\n    * @public\n    * @function\n    * @param {M.Control} control to compare\n    * @api stable\n    */\n   equals(control) {\n     return control instanceof QueryDatabaseControl;\n   }\n \n   addAbrePanelEvent() {\n     const elem = document.querySelector('.m-panel.m-querydatabase.collapsed .m-panel-btn.icon-tabla');\n     if (elem !== null) {\n       elem.addEventListener('click', () => {\n         const container = this.map_.getContainer().parentElement.parentElement;\n         container.style.width = 'calc(100% - 530px)';\n         container.style.position = 'fixed';\n         if (this.position === 'TL') {\n           container.style.left = '530px';\n         } else {\n           container.style.right = '530px';\n         }\n         this.map_.refresh();\n         this.addCierraPanelEvent();\n       });\n     }\n   }\n \n   addCierraPanelEvent() {\n     const elem = document.querySelector('.m-panel.m-querydatabase.opened .m-panel-btn');\n     if (elem !== null) {\n       elem.addEventListener('click', () => {\n         const container = this.map_.getContainer().parentElement.parentElement;\n         container.style.width = '100%';\n         container.style.position = '';\n         if (this.position_ === 'TL') {\n           container.style.left = 'unset';\n         } else {\n           container.style.right = 'unset';\n         }\n \n         this.map_.refresh();\n         this.addAbrePanelEvent();\n       });\n     }\n   }\n \n   initPanelAttributes() {\n     if (this.collapsed) {\n       this.addAbrePanelEvent();\n     } else {\n       this.addCierraPanelEvent();\n       const container = this.map_.getContainer().parentElement.parentElement;\n       container.style.width = 'calc(100% - 530px)';\n       container.style.position = 'fixed';\n       if (this.position === 'TL') {\n         container.style.left = '530px';\n       } else {\n         container.style.right = '530px';\n       }\n       this.map_.refresh();\n     }\n   }\n\n   buildGeomFromBbox(){\n      let bbox = this.map.getBbox();\n      let featureBbox = new M.Feature();\n      let coordinates = [];\n      coordinates.push([bbox.x.min, bbox.y.min]);\n      coordinates.push([bbox.x.max, bbox.y.min]);\n      coordinates.push([bbox.x.max, bbox.y.max]);\n      coordinates.push([bbox.x.min, bbox.y.max]);\n      coordinates.push([bbox.x.min, bbox.y.min]);\n      let geomBbox = {\n        type: 'Polygon',\n        coordinates: [coordinates]\n      };\n      featureBbox.setGeometry(geomBbox);\n      let format = new M.format.WKT();\n      return format.write(featureBbox).replaceAll(' ', '$')+\"srid\"+this.map.getProjection().code.slice(5);\n   }\n\n   addMapMoveEvent(callback){\n     this.map.getMapImpl().on('moveend', callback);\n     this.moveEvents.push(callback);\n   }\n\n   removeMapMoveEvents(){\n      for(let i = 0; i < this.moveEvents.length; i++){\n        this.map.getMapImpl().un('moveend', this.moveEvents[i]);\n      }\n      this.moveEvents = [];\n   }\n\n   getTokenByConnection(){\n      if(this.connection && this.connection.host && this.connection.port && this.connection.name\n        && this.connection.user && this.connection.password){\n        let token = `host=${this.connection.host}&port=${this.connection.port}&name=${this.connection.name}&user=${this.connection.user}&password=${this.connection.password}`;\n        return btoa(token);\n      }else{\n        return '';\n      }\n   }\n\n   getArrayFormated(array){\n     let result = [];\n     if(array && Array.isArray(array)){\n      for(let i = 0; i < array.length; i++){\n        let obj = {\n          key: i,\n          value: array[i],\n        };\n        result.push(obj);\n      }\n    }\n     return result;\n   }\n\n   getElementsWithAttributes(){\n      let result = [];\n      for(let i = 0; i < this.elementos.length; i++){\n        let obj = [];\n        if(this.connection && this.connection.table && this.connection.table === this.tabla\n          && this.atributos && this.atributos.length > 0){\n          for(let j = 0; j < this.atributos.length; j++){\n            obj.push(this.elementos[i][this.atributos[j].value]);\n          }\n        }else{\n          obj = Object.values(this.elementos[i]).filter((v) => {if(!v.includes('mapea_feature')) return v;});\n        }\n        result.push({featureId: this.elementos[i].featureId, datos: obj});\n      }\n      return result;\n   }\n\n   getAttributes(){\n      let result = [];\n      if(this.connection && this.connection.table && this.connection.table === this.tabla\n        && this.atributos && this.atributos.length > 0){\n        result = this.atributos;\n      }else if(this.elementos && this.elementos.length > 0){\n        result = this.getArrayFormated(Object.keys(this.elementos[0]).filter((v) => {if(v !== 'featureId') return v;}));\n      }\n      return result;\n   }\n\n   interaccionTabla(evt){\n    if(evt.target.localName === 'td'){\n      this.resaltarElemento(evt.target.parentNode.id);\n    }else if(evt.target.localName === 'tr'){\n      this.resaltarElemento(evt.target.id);\n    }\n   }\n\n   resaltarElemento(featureId){     \n     let feature = this.databaseLayer.getFeatureById(featureId);\n     this.cambiarEstiloFeature(feature);\n   }\n\n   cambiarEstiloFeature(feature){\n    if(this.feature){\n      this.feature.setStyle(null);\n    }\n    let style = null;\n    if(this.styles && this.styles.select){\n       let geomType = feature.getGeometry().type;\n       if(geomType.includes('Point') && this.styles.select.point){\n         style = this.styles.select.point;\n       }else if(geomType.includes('LineString') && this.styles.select.line){\n         style = this.styles.select.line;\n       }else if(geomType.includes('Polygon') && this.styles.select.polygon){\n         style = this.styles.select.polygon;\n       }\n    }\n    feature.setStyle(style);\n    this.feature = feature;\n   }\n}\n ","/**\n * @module M/plugin/QueryDatabase\n */\nimport 'assets/css/querydatabase';\nimport 'assets/css/fonts';\nimport QueryDatabaseControl from './querydatabasecontrol';\nimport api from '../../api';\nimport { getValue } from './i18n/language';\n\nexport default class QueryDatabase extends M.Plugin {\n  /**\n   * @classdesc\n   * Main facade plugin object. This class creates a plugin\n   * object which has an implementation Object\n   *\n   * @constructor\n   * @extends {M.Plugin}\n   * @param {Object} impl implementation object\n   * @api stable\n   */\n  constructor(options) {\n    super();\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.map_ = null;\n\n    /**\n     * Array of controls\n     * @private\n     * @type {Array<M.Control>}\n     */\n    this.controls_ = [];\n\n    /**\n     * Position of the plugin on browser window\n     * @private\n     * @type {Enum}\n     * Possible values: 'TL', 'TR', 'BR', 'BL'\n     */\n    this.position_ = options.position || 'TL';\n\n    /**\n     * Option to allow the plugin to be collapsed or not\n     * @private\n     * @type {Boolean}\n     */\n    this.collapsed_ = options.collapsed;\n    if (this.collapsed_ === undefined) this.collapsed_ = true;\n\n    /**\n     * Option to allow the plugin to be collapsible or not\n     * @private\n     * @type {Boolean}\n     */\n    this.collapsible_ = options.collapsible;\n    if (this.collapsible_ === undefined) this.collapsible_ = true;\n\n    this.connection_ = options.connection;\n\n    this.styles_ = options.styles;\n  }\n\n  /**\n   * This function adds this plugin into the map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map the map to add the plugin\n   * @api stable\n   */\n  addTo(map) {\n    this.map_ = map;\n    this.panel_ = new M.ui.Panel('panelQueryDatabase', {\n      className: 'm-querydatabase',\n      collapsed: this.collapsed_,\n      collapsible: this.collapsible_,\n      position: M.ui.position[this.position_],\n      collapsedButtonClass: 'icon-tabla',\n      tooltip: getValue('tooltip'),\n    });\n\n    this.control_ = new QueryDatabaseControl(this.collapsed_, this.position_, this.connection_, this.styles_);\n    this.controls_.push(this.control_);\n    this.panel_.addControls(this.controls_);\n    map.addPanels(this.panel_);\n    this.control_.initPanelAttributes();\n  }\n\n  /**\n   * Destroys plugin\n   * @public\n   * @function\n   * @api\n   */\n  destroy() {\n    this.map_.removeControls(this.controls_);\n    [this.map_, this.control_, this.controls_, this.panel_] = [null, null, null, null];\n  }\n\n  /**\n   * @getter\n   * @public\n   */\n  get name() {\n    return 'querydatabase';\n  }\n}\n","/*eslint-disable*/\nimport M$plugin$QueryDatabase from '/home/jesusdiaz/Workspace/Git/mapea-lite/api-ign-js/src/plugins/querydatabase/src/facade/js/querydatabase';\nimport M$control$QueryDatabaseControl from '/home/jesusdiaz/Workspace/Git/mapea-lite/api-ign-js/src/plugins/querydatabase/src/facade/js/querydatabasecontrol';\nimport M$impl$control$QueryDatabaseControl from '/home/jesusdiaz/Workspace/Git/mapea-lite/api-ign-js/src/plugins/querydatabase/src/impl/ol/js/querydatabasecontrol';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.QueryDatabase = M$plugin$QueryDatabase;\nwindow.M.control.QueryDatabaseControl = M$control$QueryDatabaseControl;\nwindow.M.impl.control.QueryDatabaseControl = M$impl$control$QueryDatabaseControl;\n"],"sourceRoot":""}