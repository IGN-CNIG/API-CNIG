{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/information_popup.html","webpack:///./src/templates/information_layers.html","webpack:///./src/templates/information.html","webpack:///./src/facade/js/i18n/language.js","webpack:///./src/impl/ol/js/informationcontrol.js","webpack:///./src/facade/js/informationcontrol.js","webpack:///./src/facade/js/information.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","translations","en","es","getValue","keyPath","res","lang","arguments","length","undefined","M","language","getLang","translation","getTranslation","utils","isNullOrEmpty","console","warn","concat","split","reduce","prev","current","regExs","gsResponse","msNewFeature","gsNewFeature","gsGeometry","msGeometry","msUnsupportedFormat","POPUP_TITLE","InformationControl","format","featureCount","buffer","opened","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","format_","normalize","featureCount_","buffer_","opened_","facadeMap_","impl","Control","info","formato","infoContainer","document","createElement","innerHTML","content","Array","forEach","querySelectorAll","element","trim","test","ol","WFS","readFeatures","unsupported","map","html","_get","getMapImpl","addControl","addOnClickEvent_","deleteOnClickEvent_","deactivate","removeControl","Observable","unByKey","clickEventKey_","querySelector","classList","remove","_this2","olMap","on","e","buildUrl_","dialog","add","dialogParam","evt","wmsInfoURLS","buildWMSInfoURL","getWMS","wmtsInfoURLS","buildWMTSInfoURL","getWMTS","layerNamesUrls","_toConsumableArray","filter","layer","showInfoFromURL_","coordinate","wmsLayers","_this3","viewResolution","getView","getResolution","srs","getProjection","code","param","olLayer","getImpl","getOL3Layer","isVisible","isQueryable","informationParams","INFO_FORMAT","FEATURE_COUNT","source","getSource","coord","url","BUFFER","getFeatureInfoUrl","legend","wmtsLayers","_this4","infoFormat","getZoom","replace","layerName","formatedInfo","features","feature","attr","getKeys","beautifyAttribute","ilen","attrName","attrValue","txtToHtmlGeoserver","txtToHtmlMapserver","infoVar","attrValuesString","attrValueString","indexOf","htmlHeader","nextAttrValueString","_this5","htmlAsText","template","compileSync","informationPopupTemplate","vars","parseToHtml","infos","String","contFull","loadingInfoTab","icon","title","popup","getPopup","Popup","addTab","addPopup","getTabs","some","tab","removePopup","layerNameUrl","proxy","remote","then","response","error","text","insert","formatInfo","push","unsupportedFormat","removeTab","popupContent","informationLayersTemplate","layers","info_of","listeners","selector","all","type","callback","toogleSection","setTimeout","elem","click","popup_","target","parentElement","contains","coordinates","getCoordinate","panIntoView","tooltip","informationcontrol_classCallCheck","isUndefined","InformationImplControl","exception","informationcontrol_possibleConstructorReturn","informationcontrol_getPrototypeOf","Promise","success","fail","invokeEscKey","activate","body","style","cursor","addEventListener","checkEscKey","removeEventListener","dispatchEvent","window","KeyboardEvent","keyCode","which","shiftKey","ctrlKey","metaKey","err","control","Information","options","information_classCallCheck","information_possibleConstructorReturn","information_getPrototypeOf","map_","controls_","position_","position","tooltip_","name_","metadata_","api","metadata","Plugin","fc","ctrl","panel_","ui","Panel","className","collapsedButtonClass","addControls","addPanels","cadena","plugin","removeControls","_ref","M$plugin$Information","M$control$InformationControl","M$impl$control$InformationControl"],"mappings":"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","file":"information.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = \"<div class=\\\"m-information-content\\\">\\n   {{{info}}}\\n</div>\\n\";","module.exports = \"  {{#each layers}}\\n      <div class='m-information-content-info'>\\n          <div class='m-information-content-info-header'>\\n              <div class=\\\"m-arrow-right\\\"></div>\\n              <div>\\n                  <p> {{../info_of}} <strong>{{layerName}}</strong></p>\\n              </div>\\n          </div>\\n          <div class='m-information-content-info-body m-content-collapsed'>\\n              {{{formatedInfo}}}\\n          </div>\\n      </div>\\n  {{/each}}\\n\";","module.exports = \"<div class=\\\"m-control m-container m-information-container\\\">\\n  <button id='m-information-btn' class=\\\"m-information-btn g-cartografia-info\\\" title=\\\"{{translations.tooltip}}\\\"></button>\\n</div>\\n\";","import en from './en';\nimport es from './es';\n\n/**\n * Default object with es and en translate.\n *\n * @const\n * @type {object}\n */\nconst translations = {\n  en,\n  es,\n};\n\nconst getLang = () => {\n  let res = 'es';\n  if (typeof M.language.getLang === 'function') {\n    res = M.language.getLang();\n  }\n\n  return res;\n};\n\n/**\n * This function sets a new language translate.\n * @param {string} lang\n * @param {JSON} json\n * @public\n * @api\n */\nexport const addTranslation = (lang, json) => {\n  translations[lang] = json;\n};\n\n/**\n * This function gets a language translate.\n *\n * @param {string} lang\n * @return {JSON}\n * @public\n * @api\n */\nexport const getTranslation = (lang) => {\n  return translations[lang];\n};\n\n/**\n * This function gets a language value from key\n *\n * @public\n * @param {string}\n * @param {string}\n * @return {string}\n * @public\n * @api\n */\n\nexport const getValue = (keyPath, lang = getLang()) => {\n  const translation = getTranslation(lang);\n  let value = '';\n  if (M.utils.isNullOrEmpty(translation)) {\n    /* eslint-disable no-console */\n    console.warn(`The translation '${lang}' has not been defined.`);\n  } else {\n    value = keyPath.split('.').reduce((prev, current) => prev[current], translation);\n  }\n\n  return value;\n};\n","/**\n * @module M/impl/control/InformationControl\n */\n\nimport informationPopupTemplate from '../../../templates/information_popup';\nimport informationLayersTemplate from '../../../templates/information_layers';\nimport { getValue } from '../../../facade/js/i18n/language';\n\n/**\n * Regular expressions of Information\n * @type {object}\n * @public\n * @api\n */\nconst regExs = {\n  gsResponse: /^results[\\w\\s\\S]*'http:/i,\n  msNewFeature: /feature(\\s*)(\\w+)(\\s*):/i,\n  gsNewFeature: /#newfeature#/,\n  gsGeometry: /geom$/i,\n  msGeometry: /boundedby$/i,\n  msUnsupportedFormat: /error(.*)unsupported(.*)info_format/i,\n};\n\nconst POPUP_TITLE = getValue('title');\n\nexport default class InformationControl extends M.impl.Control {\n  constructor(format, featureCount, buffer, opened) {\n    super({});\n\n    /**\n     * Format to request information\n     *\n     * @type {string}\n     * @private\n     */\n    this.format_ = format;\n\n    if ((M.utils.normalize(this.format_) === 'plain') || (M.utils.normalize(this.format_) === 'text/plain')) {\n      this.format_ = 'text/plain';\n    } else if ((M.utils.normalize(this.format_) === 'gml') || (M.utils.normalize(this.format_) === 'application/vnd.ogc.gml')) {\n      this.format_ = 'application/vnd.ogc.gml';\n    } else {\n      this.format_ = 'text/html';\n    }\n\n    /**\n     * Maximum feature count\n     *\n     * @private\n     * @type {Integer}\n     */\n    this.featureCount_ = featureCount;\n\n    /**\n     * Buffer for click information\n     *\n     * @private\n     * @type {Integer}\n     */\n    this.buffer_ = buffer;\n\n    /**\n     * Information opened all, only if there is one layer, or not opened\n     *\n     * @private\n     * @type {string}\n     */\n    this.opened_ = opened;\n\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.facadeMap_ = null;\n  }\n\n  /**\n   * This function adds the control to the specified map\n   *\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {HTMLElement} html of the plugin\n   * @api\n   */\n  addTo(map, html) {\n    super.addTo(map, html);\n    this.facadeMap_ = map;\n    map.getMapImpl().addControl(this);\n  }\n\n  /**\n   * This function adds the event singleclick to the specified map\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  activate() {\n    this.addOnClickEvent_();\n  }\n\n  /**\n   * This function remove the event singleclick to the specified map\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  deactivate() {\n    this.deleteOnClickEvent_();\n  }\n\n  /**\n   * This function destroys this control, cleaning the HTML\n   * and unregistering all events\n   *\n   * @public\n   * @function\n   * @api\n   * @export\n   */\n  destroy() {\n    this.deactivate();\n    this.facadeMap_.getMapImpl().removeControl(this);\n    this.facadeMap_ = null;\n  }\n\n  /**\n   * This function remove the event singleclick to the specified map\n   *\n   * @private\n   * @function\n   */\n  deleteOnClickEvent_() {\n    ol.Observable.unByKey(this.clickEventKey_);\n    document.querySelector('.m-control.m-container.m-information-container').classList.remove('activated');\n  }\n\n  /**\n   * This function adds the event singleclick to the specified map\n   *\n   * @private\n   * @function\n   */\n  addOnClickEvent_() {\n    const olMap = this.facadeMap_.getMapImpl();\n    this.clickEventKey_ = olMap.on('singleclick', e => this.buildUrl_(M.dialog, e));\n    document.querySelector('.m-control.m-container.m-information-container').classList.add('activated');\n  }\n\n  /**\n   * This function builds the query URL and show results\n   *\n   * @private\n   * @function\n   * @param {ol.MapBrowserPointerEvent} evt - Browser point event\n   */\n  buildUrl_(dialogParam, evt) {\n    this.evt = evt;\n    const olMap = this.facadeMap_.getMapImpl();\n    const wmsInfoURLS = this.buildWMSInfoURL(this.facadeMap_.getWMS());\n    const wmtsInfoURLS = this.buildWMTSInfoURL(this.facadeMap_.getWMTS());\n    const layerNamesUrls = [...wmtsInfoURLS, ...wmsInfoURLS]\n      .filter(layer => !M.utils.isNullOrEmpty(layer));\n    if (layerNamesUrls.length > 0) {\n      this.showInfoFromURL_(layerNamesUrls, evt.coordinate, olMap);\n    } else {\n      dialogParam.info(getValue('not_queryable'));\n    }\n  }\n\n  /**\n   * @function\n   * @public\n   * @api\n   */\n  buildWMSInfoURL(wmsLayers) {\n    const olMap = this.facadeMap_.getMapImpl();\n    const viewResolution = olMap.getView().getResolution();\n    const srs = this.facadeMap_.getProjection().code;\n    return wmsLayers.map((layer) => {\n      const olLayer = layer.getImpl().getOL3Layer();\n      let param;\n      if (layer.isVisible() && layer.isQueryable() && !M.utils.isNullOrEmpty(olLayer)) {\n        param = {};\n        const informationParams = {\n          INFO_FORMAT: this.format_,\n          FEATURE_COUNT: this.featureCount_,\n        };\n        const regexBuffer = /buffer/i;\n        const source = olLayer.getSource();\n        const coord = this.evt.coordinate;\n        // const url = source.getGetFeatureInfoUrl(coord, viewResolution, srs, informationParams);\n        if (!regexBuffer.test(layer.url)) {\n          informationParams.BUFFER = this.buffer_;\n        }\n        const url = source.getFeatureInfoUrl(coord, viewResolution, srs, informationParams);\n        param = { layer: layer.legend || layer.name, url };\n      }\n      return param;\n    });\n  }\n\n  /**\n   * @function\n   * @public\n   * @api\n   */\n  buildWMTSInfoURL(wmtsLayers) {\n    return wmtsLayers.map((layer) => {\n      let param;\n      if (layer.isVisible() && layer.isQueryable() && !M.utils.isNullOrEmpty(layer)) {\n        param = {};\n        const infoFormat = this.format_;\n        const coord = this.evt.coordinate;\n        const url = layer.getFeatureInfoUrl(coord, this.facadeMap_.getZoom(), infoFormat).replace('row=-', 'row=');\n        param = { layer: layer.legend || layer.name, url };\n      }\n      return param;\n    });\n  }\n\n  /**\n   * This function specifies whether the information is valid\n   *\n   * @param {string} info - Information to validate\n   * @param {string} formato - Specific format to validate\n   * @returns {boolean} res - Is valid or not format\n   * @private\n   * @function\n   */\n  static insert(info, formato) {\n    let res = false;\n    switch (formato) {\n      case 'text/html':\n        // ex\n        const infoContainer = document.createElement('div');\n        infoContainer.innerHTML = info;\n        // content\n        let content = '';\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('body'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('div'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('table'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('b'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('span'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('input'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('a'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('img'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('p'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('ul'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('li'), (element) => {\n          content += element.innerHTML.trim();\n        });\n\n        if ((content.length > 0) && !/WMS\\s+server\\s+error/i.test(info)) {\n          res = true;\n        }\n        break;\n\n      case 'application/vnd.ogc.gml': // ol.format.GML (http://openlayers.org/en/v3.9.0/apidoc/ol.format.GML.html)\n        const formater = new ol.format.WFS();\n        const features = formater.readFeatures(info);\n        res = (features.length > 0);\n        break;\n\n      case 'text/plain': // exp reg\n        if (!/returned\\s+no\\s+results/i.test(info) && !/features\\s+were\\s+found/i.test(info) && !/:$/i.test(info)) {\n          res = true;\n        }\n        break;\n      default:\n    }\n    return res;\n  }\n\n  /**\n   * This function formats the response\n   *\n   * @param {string} info - Information to formatting\n   * @param {string} formato - Specific format\n   * @param {string} layername - Layer name\n   * @returns {string} information - Formatted information\n   * @private\n   * @function\n   */\n  formatInfo(info, formato, layerName) {\n    let formatedInfo = null;\n    switch (formato) {\n      case 'text/html': // ex\n        formatedInfo = info;\n        break;\n      case 'application/vnd.ogc.gml': // ol.format.GML (http://openlayers.org/en/v3.9.0/apidoc/ol.format.GML.html)\n        // let formater = new ol.format.GML();\n        // let feature = formater.readFeatures(info)[0];\n        const formater = new ol.format.WFS();\n        const features = formater.readFeatures(info);\n        formatedInfo = '';\n        features.forEach((feature) => {\n          const attr = feature.getKeys();\n          formatedInfo += '<div class=\\'divinfo\\'>';\n          formatedInfo += `<table class='mapea-table'><tbody><tr><td class='header' colspan='3'>' ${M.utils.beautifyAttribute(layerName)} '</td></tr>'`;\n          for (let i = 0, ilen = attr.length; i < ilen; i += 1) {\n            const attrName = attr[i];\n            const attrValue = feature.get(attrName);\n\n            formatedInfo += '<tr><td class=\"key\"><b>';\n            formatedInfo += M.utils.beautifyAttribute(attrName);\n            formatedInfo += '</b></td><td class=\"value\">';\n            formatedInfo += attrValue;\n            formatedInfo += '</td></tr>';\n          }\n          formatedInfo += '</tbody></table></div>';\n        });\n        break;\n      case 'text/plain': // exp reg\n        if (regExs.gsResponse.test(info)) {\n          formatedInfo = this.txtToHtmlGeoserver(info, layerName);\n        } else {\n          formatedInfo = this.txtToHtmlMapserver(info, layerName);\n        }\n        break;\n      default:\n    }\n    return formatedInfo;\n  }\n\n  /**\n   * This function indicates whether the format is accepted by the layer - Specific format text/html\n   *\n   * @param {string} info - Response to consult layer\n   * @param {string} formato - Specific format\n   * @returns {boolean} unsupported - It indicates whether the format is accepted\n   * @private\n   * @function\n   */\n  static unsupportedFormat(info, formato) {\n    let unsupported = false;\n    if (formato === 'text/html') {\n      unsupported = regExs.msUnsupportedFormat.test(info);\n    }\n    return unsupported;\n  }\n\n  /**\n   * This function return formatted information. Specific Geoserver\n   *\n   * @private\n   * @function\n   * @param {string} info - Information to formatting\n   * @param {string} layername - Layer name\n   * @returns {string} html - Information formated\n   */\n  txtToHtmlGeoserver(info, layerName) {\n    // get layer name from the header\n    // let layerName = info.replace(/[\\w\\s\\S]*\\:(\\w*)\\'\\:[\\s\\S\\w]*/i, \"$1\");\n    // remove header\n    let infoVar = info;\n\n    infoVar = infoVar.replace(/[\\w\\s\\S]*':/i, '');\n\n    infoVar = infoVar.replace(/---(-*)(n+)---(-*)/g, '#newfeature#');\n\n    const attrValuesString = infoVar.split('\\n');\n\n    let html = '<div class=\\'divinfo\\'>';\n\n    // build the table\n    html += `<table class='mapea-table'><tbody><tr><td class='header' colspan='3'>${M.utils.beautifyAttribute(layerName)}</td></tr>`;\n\n    for (let i = 0, ilen = attrValuesString.length; i < ilen; i += 1) {\n      const attrValueString = attrValuesString[i].trim();\n      if (attrValueString.indexOf('=') !== -1) {\n        const attrValue = attrValueString.split('=');\n        const attr = attrValue[0].trim();\n        let value = '-';\n        if (attrValue.length > 1) {\n          value = attrValue[1].trim();\n          if (value.length === 0 || value === 'null') {\n            value = '-';\n          }\n        }\n\n        if (regExs.gsGeometry.test(attr) === false) {\n          html += '<tr><td class=\"key\"><b>';\n          html += M.utils.beautifyAttribute(attr);\n          html += '</b></td><td class=\"value\">';\n          html += value;\n          html += '</td></tr>';\n        }\n      } else if (regExs.gsNewFeature.test(attrValueString)) {\n        // set new header\n        html += `<tr><td class=\"header\" colspan=\"3\">${M.utils.beautifyAttribute(layerName)}</td></tr>`;\n      }\n    }\n\n    html += '</tbody></table></div>';\n\n    return html;\n  }\n\n  /**\n   * This function return formatted information. Specific Mapserver\n   *\n   * @private\n   * @function\n   * @param {string} info - Information to formatting\n   * @returns {string} html - Information formated\n   */\n  txtToHtmlMapserver(info) {\n    let infoVar = info;\n    // remove header\n    infoVar = infoVar.replace(/[\\w\\s\\S]*(layer)/i, '$1');\n\n    // get layer name\n    const layerName = infoVar.replace(/layer(\\s*)'(\\w+)'[\\w\\s\\S]*/i, '$2');\n\n    // remove layer name\n    infoVar = infoVar.replace(/layer(\\s*)'(\\w+)'([\\w\\s\\S]*)/i, '$3');\n\n    // remove feature number\n    infoVar = infoVar.replace(/feature(\\s*)(\\w*)(\\s*)(:)([\\w\\s\\S]*)/i, '$5');\n\n    // remove simple quotes\n    infoVar = infoVar.replace(/'/g, '');\n\n    // replace the equal (=) with (;)\n    infoVar = infoVar.replace(/=/g, ';');\n\n    const attrValuesString = infoVar.split('\\n');\n\n    let html = '';\n    const htmlHeader = `<table class='mapea-table'><tbody><tr><td class='header' colspan='3'>${M.utils.beautifyAttribute(layerName)}</td></tr>`;\n\n    for (let i = 0, ilen = attrValuesString.length; i < ilen; i += 1) {\n      const attrValueString = attrValuesString[i].trim();\n      const nextAttrValueString = attrValuesString[i] ? attrValuesString[i].trim() : '';\n\n      const attrValue = attrValueString.split(';');\n      const attr = attrValue[0].trim();\n      let value = '-';\n      if (attrValue.length > 1) {\n        value = attrValue[1].trim();\n        if (value.length === 0) {\n          value = '-';\n        }\n      }\n\n      if (attr.length > 0) {\n        if (regExs.msNewFeature.test(attr)) {\n          if ((nextAttrValueString.length > 0) &&\n            !regExs.msNewFeature.test(nextAttrValueString)) {\n            // set new header\n            html += `<tr><td class='header' colspan='3'>${M.utils.beautifyAttribute(layerName)}</td><td></td></tr>`;\n          }\n        } else {\n          html += '<tr><td class=\"key\"><b>';\n          html += M.utils.beautifyAttribute(attr);\n          html += '</b></td><td class=\"value\">';\n          html += value;\n          html += '</td></tr>';\n        }\n      }\n    }\n\n    if (html.length > 0) {\n      html = `${htmlHeader + html}</tbody></table>`;\n    }\n\n    return html;\n  }\n\n  /**\n   * This function displays information in a popup\n   *\n   * @private\n   * @function\n   * @param {array<object>} layerNamesUrls - Consulted layers\n   * @param {array} coordinate - Coordinate position onClick\n   * @param {olMap} olMap - Map\n\n   */\n  showInfoFromURL_(layerNamesUrls, coordinate, olMap) {\n    const htmlAsText = M.template.compileSync(informationPopupTemplate, {\n      vars: {\n        info: getValue('querying'),\n      },\n      parseToHtml: false,\n    });\n\n    const infos = [];\n    const formato = String(this.format_);\n    let contFull = 0;\n    const loadingInfoTab = {\n      icon: 'g-cartografia-info',\n      title: POPUP_TITLE,\n      content: htmlAsText,\n    };\n    let popup = this.facadeMap_.getPopup();\n\n    if (M.utils.isNullOrEmpty(popup)) {\n      popup = new M.Popup();\n      popup.addTab(loadingInfoTab);\n      this.facadeMap_.addPopup(popup, coordinate);\n    } else {\n      const hasExternalContent =\n        popup.getTabs().some(tab => tab.title !== POPUP_TITLE);\n      if (!hasExternalContent) {\n        this.facadeMap_.removePopup();\n        popup = new M.Popup();\n        popup.addTab(loadingInfoTab);\n        this.facadeMap_.addPopup(popup, coordinate);\n      } else {\n        popup.addTab(loadingInfoTab);\n      }\n    }\n    layerNamesUrls.forEach((layerNameUrl) => {\n      const url = layerNameUrl.url.replace('row=-', 'row=').replace('col=-', 'col=');\n      const layerName = layerNameUrl.layer;\n      M.proxy(true);\n      M.remote.get(url).then((response) => {\n        popup = this.facadeMap_.getPopup();\n        if (response.code === 200 && response.error === false) {\n          const info = response.text;\n          if (InformationControl.insert(info, formato) === true) {\n            const formatedInfo = this.formatInfo(info, formato, layerName);\n            infos.push({ formatedInfo, layerName });\n          } else if (InformationControl.unsupportedFormat(info, formato)) {\n            infos.push({\n              formatedInfo: getValue('unsupported_format'),\n              layerName,\n            });\n          }\n        }\n        contFull += 1;\n        if (layerNamesUrls.length === contFull && !M.utils.isNullOrEmpty(popup)) {\n          popup.removeTab(loadingInfoTab);\n          if (infos.length === 0) {\n            popup.addTab({\n              icon: 'g-cartografia-info',\n              title: POPUP_TITLE,\n              content: getValue('no_info'),\n            });\n          } else {\n            const popupContent = M.template.compileSync(informationLayersTemplate, {\n              vars: {\n                layers: infos,\n                info_of: getValue('info_of'),\n              },\n              parseToHtml: false,\n            });\n            popup.addTab({\n              icon: 'g-cartografia-info',\n              title: POPUP_TITLE,\n              content: popupContent,\n              listeners: [{\n                selector: '.m-information-content-info div.m-arrow-right',\n                all: true,\n                type: 'click',\n                callback: e => this.toogleSection(e),\n              }, {\n                selector: '.m-information-content-info div:nth-child(2) p',\n                all: true,\n                type: 'click',\n                callback: e => this.toogleSection(e),\n              }],\n            });\n\n            if (this.opened_ === 'all') {\n              setTimeout(() => {\n                document.querySelectorAll('div.m-arrow-right').forEach((elem) => {\n                  elem.click();\n                });\n              }, 100);\n            } else if (this.opened_ === 'one' && layerNamesUrls.length === 1) {\n              setTimeout(() => {\n                document.querySelector('div.m-arrow-right').click();\n              }, 100);\n            }\n          }\n        }\n      });\n    });\n    this.popup_ = popup;\n  }\n\n  /**\n   * This functions handle the close/open beahaviour of the sections feature info\n   * @function\n   */\n  toogleSection(e) {\n    let { target } = e;\n    let { parentElement } = target.parentElement;\n    if (!parentElement.classList.contains('m-information-content-info')) {\n      if (parentElement.classList.contains('m-information-content-info-header')) {\n        parentElement = parentElement.parentElement;\n      } else {\n        parentElement = parentElement.parentElement.parentElement;\n      }\n\n      target = parentElement.querySelector('.m-information-content-info-header div:nth-child(1)');\n    }\n\n    const content = parentElement.querySelector('.m-information-content-info-body');\n    if (content.classList.contains('m-content-collapsed')) {\n      content.classList.remove('m-content-collapsed');\n      target.classList.remove('m-arrow-right');\n      target.classList.add('m-arrow-down');\n      const coordinates = this.popup_.getCoordinate();\n      // if (!M.utils.isNullOrEmpty(this.popup_.getImpl().panIntoView)) {\n      this.popup_.getImpl().panIntoView(coordinates);\n      // }\n    } else {\n      content.classList.add('m-content-collapsed');\n      target.classList.add('m-arrow-right');\n      target.classList.remove('m-arrow-down');\n    }\n  }\n\n  /**\n   * function remove the event 'click'\n   *\n   * @public\n   * @function\n   * @api stable\n   * @export\n   */\n  getElement() {\n    return this.element;\n  }\n}\n","/**\n * @module M/control/InformationControl\n */\n\nimport InformationImplControl from '../../impl/ol/js/informationcontrol';\nimport template from '../../templates/information';\nimport { getValue } from './i18n/language';\n\nexport default class InformationControl extends M.Control {\n  /**\n   * @classdesc\n   * Main constructor of the class. Creates a PluginControl\n   * control\n   *\n   * @constructor\n   * @extends {M.Control}\n   * @api\n   */\n  constructor(format, featureCount, buffer, tooltip, opened) {\n    if (M.utils.isUndefined(InformationImplControl)) {\n      M.exception('');\n    }\n    const impl = new InformationImplControl(format, featureCount, buffer, opened);\n    super(impl, 'Information');\n    this.tooltip = tooltip;\n  }\n\n  /**\n   * This function creates the view\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api\n   */\n  createView(map) {\n    return new Promise((success, fail) => {\n      const html = M.template.compileSync(template, {\n        vars: {\n          translations: {\n            tooltip: this.tooltip || getValue('tooltip'),\n          },\n        },\n      });\n      success(html);\n    });\n  }\n\n  /**\n   * This function is called on the control activation\n   *\n   * @public\n   * @function\n   * @api\n   */\n  activate() {\n    this.invokeEscKey();\n    this.getImpl().activate();\n    document.body.style.cursor = 'url(\\'https://i.ibb.co/HBtH3Qs/click-info.png\\') 1 7, auto';\n    document.addEventListener('keyup', this.checkEscKey.bind(this));\n  }\n  /**\n   * This function is called on the control deactivation\n   *\n   * @public\n   * @function\n   * @api\n   */\n  deactivate() {\n    this.getImpl().deactivate();\n    document.body.style.cursor = 'default';\n    document.removeEventListener('keyup', this.checkEscKey.bind(this));\n  }\n\n  checkEscKey(evt) {\n    const contains = document.querySelector('.m-control.m-container.m-information-container').classList.contains('activated');\n    if (evt.key === 'Escape' && contains) {\n      document.removeEventListener('keyup', this.checkEscKey.bind(this));\n      document.querySelector('#m-information-btn').click();\n    }\n  }\n\n  invokeEscKey() {\n    try {\n      document.dispatchEvent(new window.KeyboardEvent('keyup', {\n        key: 'Escape',\n        keyCode: 27,\n        code: '',\n        which: 69,\n        shiftKey: false,\n        ctrlKey: false,\n        metaKey: false,\n      }));\n    } catch (err) {\n      /* eslint-disable no-console */\n      console.error(err);\n    }\n  }\n\n  /**\n   * This function gets activation button\n   *\n   * @public\n   * @function\n   * @param {HTML} html of control\n   * @api\n   */\n  getActivationButton(html) {\n    return html.querySelector('#m-information-btn');\n  }\n\n  /**\n   * This function compares controls\n   *\n   * @public\n   * @function\n   * @param {M.Control} control to compare\n   * @api\n   */\n  equals(control) {\n    return control instanceof InformationControl;\n  }\n}\n","/**\n * @module M/plugin/Information\n */\nimport '../assets/css/information';\nimport api from '../../api';\nimport InformationControl from './informationcontrol';\nimport { getValue } from './i18n/language';\n\nexport default class Information extends M.Plugin {\n  /**\n   * @classdesc\n   * Main facade plugin object. This class creates a plugin\n   * object which has an implementation Object\n   *\n   * @constructor\n   * @extends {M.Plugin}\n   * @param {Object} impl implementation object\n   * @api stable\n   */\n  constructor(options) {\n    super();\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.map_ = null;\n\n    /**\n     * Array of controls\n     * @private\n     * @type {Array<M.Control>}\n     */\n    this.controls_ = [];\n\n    /**\n     * Position of the plugin\n     *\n     * @private\n     * @type {string} - TL | TR | BL | BR\n     */\n    this.position_ = options.position || 'TR';\n\n    /**\n     * Plugin tooltip\n     *\n     * @private\n     * @type {string}\n     */\n    this.tooltip_ = options.tooltip || getValue('tooltip');\n\n    /**\n     * Information format\n     *\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format || 'text/html';\n\n    /**\n     * Maximum feature count\n     *\n     * @private\n     * @type {Integer}\n     */\n    this.featureCount_ = options.featureCount || 10;\n\n    /**\n     * Buffer for click information\n     *\n     * @private\n     * @type {Integer}\n     */\n    this.buffer_ = options.buffer || 10;\n\n    /**\n     * Information opened all, only if there is one layer, or not opened\n     *\n     * @private\n     * @type {string}\n     */\n    this.opened_ = options.opened || 'closed';\n\n    /**\n     * Plugin name\n     *\n     * @private\n     * @type {string}\n     */\n    this.name_ = 'information';\n\n    /**\n     * Metadata from api.json\n     * @private\n     * @type {Object}\n     */\n    this.metadata_ = api.metadata;\n  }\n\n  /**\n   * This function adds this plugin into the map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map the map to add the plugin\n   * @api stable\n   */\n  addTo(map) {\n    const fc = this.featureCount_;\n    this.ctrl = new InformationControl(this.format_, fc, this.buffer_, this.tooltip_, this.opened_);\n    this.controls_.push(this.ctrl);\n    this.map_ = map;\n    this.panel_ = new M.ui.Panel('panelInformation', {\n      className: 'm-plugin-information',\n      position: M.ui.position[this.position_],\n      tooltip: this.tooltip_,\n      collapsedButtonClass: 'g-cartografia-info',\n    });\n    this.panel_.addControls(this.controls_);\n    map.addPanels(this.panel_);\n  }\n\n  /**\n   * Name of the plugin\n   *\n   * @getter\n   * @function\n   */\n  get name() {\n    return 'information';\n  }\n\n  /**\n   * This function returns the position\n   *\n   * @public\n   * @return {string}\n   * @api\n   */\n  get position() {\n    return this.position_;\n  }\n\n  /**\n   * Get the API REST Parameters of the plugin\n   *\n   * @function\n   * @public\n   * @api\n   */\n  getAPIRest() {\n    let cadena = `${this.name_}=${this.position_}*${this.tooltip_}*${this.format_}*${this.featureCount_}`;\n\n    if (this.buffer_ === undefined || this.buffer_ === null || this.buffer_ === '') {\n      cadena += '*';\n    } else {\n      cadena += `*${this.buffer_}`;\n    }\n\n    if (this.opened_ === undefined || this.opened_ === null || this.opened_ === '') {\n      cadena += '*';\n    } else {\n      cadena += `*${this.opened_}`;\n    }\n\n    return cadena;\n  }\n\n  /**\n   * This function compares plugins\n   *\n   * @public\n   * @function\n   * @param {M.Plugin} plugin to compare\n   * @api\n   */\n  equals(plugin) {\n    return plugin instanceof Information;\n  }\n\n  /**\n   * This function gets metadata plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  getMetadata() {\n    return this.metadata_;\n  }\n\n  /**\n   * This function destroys this plugin\n   *\n   * @public\n   * @function\n   * @api\n   */\n  destroy() {\n    this.ctrl.deactivate();\n    this.map_.removeControls(this.controls_);\n    [this.map_, this.controls_, this.panel_] = [null, null, null];\n  }\n}\n","import M$plugin$Information from './/facade/js/information';\nimport M$control$InformationControl from './/facade/js/informationcontrol';\nimport M$impl$control$InformationControl from './/impl/ol/js/informationcontrol';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.Information = M$plugin$Information;\nwindow.M.control.InformationControl = M$control$InformationControl;\nwindow.M.impl.control.InformationControl = M$impl$control$InformationControl;\n"],"sourceRoot":""}